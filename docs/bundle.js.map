{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/ui.ts","webpack:///./src/components/privatePartComponent.ts","webpack:///./src/TimedAction.ts","webpack:///./src/arrayUtils.ts","webpack:///./src/asyncUtils.ts","webpack:///./src/crypto.ts","webpack:///./src/stringUtils.ts","webpack:///./src/components/storageOutputComponent.ts","webpack:///./src/components/passwordComponent.ts","webpack:///./src/passwordGenerators/v1.ts","webpack:///./src/ciphers/v2.ts","webpack:///./src/components/cipherComponent.ts","webpack:///./src/ciphers/v1.ts","webpack:///./src/components/reEncryptComponent.ts","webpack:///./src/storages/GitHubVaultStorage.ts","webpack:///./src/components/vaultComponent.ts","webpack:///./src/storages/SecureLocalStorage.ts","webpack:///./src/index.ts","webpack:///./src/TabControl.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","SUCCESS_COLOR","ERROR_COLOR","getElementById","elementName","element","document","Error","setupFeedbackButton","button","action","throttleTimeout","clearFunc","duration","timeout","undefined","start","clearTimeout","end","setTimeout","createThrottleTimeout","classList","remove","clickFunction","async","disabled","actionResult","result","Promise","add","error","console","message","addEventListener","setupCopyButton","txt","text","navigator","clipboard","writeText","stack","writeToClipboard","showHide","isVisible","style","removeProperty","setProperty","showHideMany","elements","btnProtectTitleForProtect","btnProtectTitleForClear","txtPrivatePart","txtPrivatePartConfirmation","btnProtect","spnProtectedConfirmation","spnPrivatePartSize","spnPrivatePartSizeConfirmation","onChangedHandlers","getPrivatePart","protectAndLockPrivatePart","length","innerHTML","title","updatePrivatePartsMatching","togglePrivatePartProtection","onProtectButtonClick","protectPrivatePartAction","delay","overrideDelay","this","onPrivatePartTextInput","onChangedHandler","toString","reset","onPrivatePartConfirmationTextInput","arrayBufferToUnsignedBigInt","arrayBuffer","buffer","byteLength","headeredBuffer","Uint8Array","set","createHeaderedBuffer","arrayView","DataView","multiplier","BigInt","getUint8","toCustomBaseOneWay","bytes","alphabet","alphabetLength","number","arrayBufferToUnsignedBigIntWithoutHeader","remainder","asUintN","fromCustomBase","input","indexOf","byteValue","Number","push","totalLength","diff","slice","unsignedBigIntToArrayBuffer","TaskCancelledError","super","_name","ERROR_NAME","setPrototypeOf","CancellationTokenSource","_isCancelled","_token","CancellationToken","source","_none","isCancelled","ensureNotCancelled","cancellationToken","BASE62_ALPHABET","getDerivedBytes","password","salt","baseKey","window","crypto","subtle","importKey","algorithm","hash","iterations","deriveKey","exportKey","generateRandomString","byteCount","array","getRandomValues","generateRandomBytes","stringToArray","str","TextEncoder","encode","divStorageOutput","txtPath","txtParameters","txtCustomKeys","isPlainObject","constructor","onPathTextInput","update","onCustomKeysTextInput","_parameterKeys","_parameterPath","_reservedKeys","chainInfo","pathToObjectChain","path","separatorIndex","tail","firstPath","substr","remainingPath","node","head","tailParent","leaf","entries","customKeys","obj","JSON","parse","parseCustomKeys","resultParameters","target","reservedKeys","includes","shallowMerge","keys","stringify","objectDeepSort","output","sort","a","b","localeCompare","clearOutputs","setParameters","parameterKeys","parameterPath","show","hide","btnTabPasswords","divTabPasswords","passwordGenerator","hkdfPurpose","_description","privatePart","publicPart","derivedKey","hkdfKey","sign","txtPublicPart","spnPublicPartSize","btnGeneratePublicPart","btnClearPublicPart","btnCopyPublicPart","btnShowHidePasswordOptionalFeatures","lblAlphabetLength","numOutputSizeRange","numOutputSizeNum","lblAlphabet","txtAlphabet","spnAlphabetSize","divPasswordAlphabetActions","btnResetAlphabet","txtResultPassword","spnResultPasswordLength","btnViewResultPassword","btnCopyResultPassword","lblGeneratingPassword","DEFAULT_LENGTH","DEFAULT_ALPHABET","RESERVED_KEYS","passwordPublicPartLastChange","copyPasswordFunction","onClearPublicPartButtonClick","prompt","updatePublicPartSize","updatePasswordPublicPartLastUpdate","updatePasswordGenerationParameters","onGeneratePublicPartButtonClick","randomString","run","none","Date","toISOString","updateResultPasswordLength","sortedAlphabet","split","canRun","passwordParamters","public","datetime","numericValue","updateOutputSizeRangeToNum","onOutputSizeRangeInput","onOutputSizeNumInput","min","parseInt","val","max","isNaN","Math","updateOutputSizeNumToRange","updateAlphabetSize","updateAlphabetValidityDisplay","isAlphabetValid","onAlphabetTextInput","isAlphabetValidResult","onResetAlphabetButtonClick","resetAlphabet","generatePasswordString","privatePrivateBytes","publicPartBytes","generatePassword","passwordTaskRunner","currentTokenSource","currentTask","microThreadId","throwTaskCanceledError","MAX_SAFE_INTEGER","localMicroThreadId","cancel","isMatching","cancelInternal","taskFactory","localToken","token","cancelAndExecute","runCore","keyString","onPublicPartTextInput","ArrayBuffer","nonce","passwordSalt","aesGcmParams","iv","passwordKey","encrypt","payload","decrypt","btnTabCiphers","divTabCiphers","cipher","txtCipherName","txtCipherSource","txtCipherTarget","btnEncrypt","btnDecrypt","btnClearCipherSource","btnCopyCipherTarget","btnClearCipherTarget","clearSourceVisualCue","setSourceVisualCueError","clearAllVisualCues","setCipherTargetValue","updateCipherParameters","version","encryptString","warn","encrypted","decryptString","decrypted","TextDecoder","decode","rethrowCancelled","onEncryptButtonClick","focus","encryptedString","onDecryptButtonClick","decryptedString","encryptionKeyDerivationSalt","ciphers","btnTabReEncrypt","divTabReEncrypt","txtReEncryptSource","txtReEncryptTarget","cboReEncryptFrom","cboReEncryptTo","btnReEncrypt","btnClearReEncryptSource","btnCopyReEncryptTarget","btnClearReEncryptTarget","fillCipherComboBox","cbo","initialValue","item","createElement","childNodes","description","onReEncryptButtonClick","sourceCipherIndex","targetCipherIndex","reEncrypted","Array","map","x","join","GitHubVaultStorageBase","secureLocalStorage","oneTimePassword","currentVaultContentHash","username","repositoryName","vaultFilename","removeItem","LOCAL_STORAGE_KEY_USERNAME","LOCAL_STORAGE_KEY_REPO","LOCAL_STORAGE_KEY_FILENAME","AUTH_TOKEN_KEY_NAME","method","authHeader","body","headers","relativeUrl","BASE_URL","retryOnUnauthorized","url","constructUrl","requestInfo","constructFetchRequest","response","fetch","status","request","promptText","localStorage","getItem","setItem","getSetVaultParameter","resolve","getToken","ensureVaultParameters","ensureToken","constructVaultFileUrl","constructTokenAuthString","ok","getVaultContent","responseContent","json","sha","atob","content","newContent","updateMessage","btoa","basicAuthHeader","authorizationName","clear","LOCAL_STORAGE_KEY_PASSWORD_PUBLIC","LOCAL_STORAGE_KEY_PASSWORD_LENGTH","LOCAL_STORAGE_KEY_BROWSER_NAME","log","authorization","id","scopes","note","authorizations","app","getUsername","passwordPublicPart","passwordLengthString","passwordLength","isSafeInteger","constructBasicAuthString","browserName","AUTHORIZATION_NAME","listAuthorizations","findAuthorization","deleteAuthorization","createAuthorization","divTabVault","btnTabVault","txtVault","btnRefreshVault","btnClearVaultSettings","vaultStorage","authToken","index","encryptedItem","onRefreshVaultButtonClick","alert","reloadVault","onClearVaultSettingsButtonClick","getTabButton","getTabContent","onChanged","type","startVisible","tabs","filter","e","components","init","_activeTabIndex","setActiveTab","activeTabIndex","tabInfo","onTabSelected","component"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export const SUCCESS_COLOR: string = '#D0FFD0';\nexport const ERROR_COLOR: string = '#FFD0D0';\n\nexport function getElementById(elementName: string): HTMLInputElement {\n    const element: HTMLElement|null = document.getElementById(elementName);\n\n    if (elementName === null) {\n        throw new Error(`DOM element '${elementName}' not found.`);\n    }\n\n    return element as HTMLInputElement;\n}\n\nasync function writeToClipboard(text: string): Promise<boolean> {\n    try {\n        await navigator.clipboard.writeText(text);\n        return true;\n    } catch (error) {\n        console.error(error.stack || error);\n        return false;\n    }\n}\n\ninterface ThrottleTimeout {\n    start: Function;\n    end: Function;\n}\n\nfunction createThrottleTimeout(clearFunc: Function, duration: number): ThrottleTimeout {\n    let timeout: number | undefined = undefined;\n\n    return {\n        start: () => {\n            if (timeout !== undefined) {\n                clearTimeout(timeout);\n                timeout = undefined;\n            }\n            clearFunc();\n        },\n        end: () => {\n            if (timeout !== undefined) {\n                clearTimeout(timeout);\n            }\n            timeout = setTimeout(clearFunc, duration);\n        }\n    };\n}\n\nexport type FeedbackButtonAsyncFunction = () => Promise<boolean> | boolean | Promise<void> | void;\n\nexport function setupFeedbackButton(button: HTMLInputElement, action: FeedbackButtonAsyncFunction): () => void {\n    const throttleTimeout: ThrottleTimeout = createThrottleTimeout(() => {\n        button.classList.remove('good-flash');\n        button.classList.remove('bad-flash');\n    }, 1000);\n\n    const clickFunction = async () => {\n        button.disabled = true;\n        throttleTimeout.start();\n\n        try {\n            const actionResult = action();\n\n            let result;\n            if (actionResult instanceof Promise) {\n                result = await actionResult;\n            } else {\n                result = actionResult;\n            }\n\n            if (result === undefined || result === true) {\n                button.classList.add('good-flash');\n            } else {\n                button.classList.add('bad-flash');\n            }\n        } catch (error) {\n            button.classList.add('bad-flash');\n            console.error(error.message || error);\n        } finally {\n            throttleTimeout.end();\n            button.disabled = false;\n        }\n    };\n\n    button.addEventListener('click', clickFunction);\n\n    return clickFunction;\n}\n\nexport function setupCopyButton(txt: HTMLInputElement, button: HTMLInputElement): () => void {\n    return setupFeedbackButton(button, () => writeToClipboard(txt.value));\n}\n\nexport function setupViewButton(txt: HTMLInputElement, button: HTMLInputElement): void {\n    button.addEventListener('click', () => {\n        if (txt.type === 'password') {\n            txt.type = 'input';\n            button.innerHTML = 'Hide';\n        } else {\n            txt.type = 'password';\n            button.innerHTML = 'View';\n        }\n    });\n}\n\nexport function showHide(element: HTMLElement, isVisible: boolean): void {\n    if (isVisible) {\n        element.style.removeProperty('display');\n    } else {\n        element.style.setProperty('display', 'none');\n    }\n}\n\nexport function showHideMany(elements: HTMLElement[], isVisible: boolean): void {\n    for (const element of elements) {\n        showHide(element, isVisible);\n    }\n}\n\nexport function setupShowHideButton(button: HTMLInputElement, startVisible: boolean, elements: HTMLElement[]): void {\n    let isVisible = startVisible;\n    button.addEventListener('click', function () {\n        isVisible = !isVisible;\n        showHideMany(elements, isVisible);\n    });\n    showHideMany(elements, isVisible);\n\n}\n","import { getElementById, SUCCESS_COLOR, ERROR_COLOR } from '../ui';\n\nimport { TimedAction } from '../TimedAction';\nimport { IComponent } from './IComponent';\n\nconst btnProtectTitleForProtect = 'Stores the string in memory and removes it from the UI component. Prevents a physical intruder from copy/pasting the value.';\nconst btnProtectTitleForClear = 'Removes the string form memory and re-enables the UI component.';\n\nconst txtPrivatePart: HTMLInputElement = getElementById('txtPrivatePart');\nconst txtPrivatePartConfirmation: HTMLInputElement = getElementById('txtPrivatePartConfirmation');\nconst btnProtect: HTMLInputElement = getElementById('btnProtect');\nconst spnProtectedConfirmation: HTMLInputElement = getElementById('spnProtectedConfirmation');\n\nconst spnPrivatePartSize: HTMLInputElement = getElementById('spnPrivatePartSize');\nconst spnPrivatePartSizeConfirmation: HTMLInputElement = getElementById('spnPrivatePartSizeConfirmation');\n\nconst PRIVATE_PART_PROTECTION_TIMEOUT: number = 60 * 1000;\n\nlet privatePart: string | undefined;\n\nconst onChangedHandlers: (() => void)[] = [];\n\nexport function registerOnChanged(onChanged: () => void) {\n    onChangedHandlers.push(onChanged);\n}\n\nexport function hasPrivatePart(): boolean {\n    return getPrivatePart().length > 0;\n}\n\nexport function getPrivatePart(): string {\n    if (privatePart !== undefined) {\n        return privatePart;\n    }\n    return txtPrivatePart.value;\n}\n\nfunction protectAndLockPrivatePart(): void {\n    if (txtPrivatePart.value.length === 0) {\n        return;\n    }\n\n    privatePart = txtPrivatePart.value;\n    spnProtectedConfirmation.innerHTML = 'Protected';\n\n    txtPrivatePart.value = '';\n    txtPrivatePartConfirmation.value = '';\n    spnPrivatePartSize.innerHTML = '0';\n    spnPrivatePartSizeConfirmation.innerHTML = '0';\n\n    txtPrivatePart.disabled = true;\n    txtPrivatePartConfirmation.disabled = true;\n\n    btnProtect.innerHTML = 'Clear and unlock';\n    btnProtect.title = btnProtectTitleForClear;\n\n    updatePrivatePartsMatching();\n}\n\nfunction clearAndUnLockPrivatePart(): void {\n    privatePart = undefined;\n    spnProtectedConfirmation.innerHTML = '';\n\n    txtPrivatePart.disabled = false;\n    txtPrivatePartConfirmation.disabled = false;\n\n    btnProtect.innerHTML = 'Protect and lock';\n    btnProtect.title = btnProtectTitleForProtect;\n    btnProtect.disabled = true;\n}\n\nfunction togglePrivatePartProtection(): void {\n    if (privatePart === undefined) {\n        protectAndLockPrivatePart();\n    } else {\n        clearAndUnLockPrivatePart();\n    }\n}\n\nfunction onProtectButtonClick() {\n    togglePrivatePartProtection();\n}\n\nconst protectPrivatePartAction: TimedAction = new TimedAction(protectAndLockPrivatePart, PRIVATE_PART_PROTECTION_TIMEOUT);\n\nfunction onPrivatePartTextInput(): void {\n    btnProtect.disabled = txtPrivatePart.value.length === 0;\n\n    spnPrivatePartSize.innerHTML = txtPrivatePart.value.length.toString();\n    updatePrivatePartsMatching();\n\n    let onChangedHandler: () => void;\n    for (onChangedHandler of onChangedHandlers) {\n        onChangedHandler();\n    }\n\n    protectPrivatePartAction.reset();\n}\n\nfunction updatePrivatePartsMatching(): void {\n    if (txtPrivatePartConfirmation.value === txtPrivatePart.value) {\n        txtPrivatePartConfirmation.style.setProperty('background', SUCCESS_COLOR);\n    } else {\n        txtPrivatePartConfirmation.style.setProperty('background', ERROR_COLOR);\n    }\n};\n\nfunction onPrivatePartConfirmationTextInput(): void {\n    spnPrivatePartSizeConfirmation.innerHTML = txtPrivatePartConfirmation.value.length.toString();\n    protectPrivatePartAction.reset();\n    updatePrivatePartsMatching();\n}\n\nexport class PrivatePartComponent implements IComponent {\n    init(): void {\n        btnProtect.addEventListener('click', onProtectButtonClick);\n        txtPrivatePart.addEventListener('input', onPrivatePartTextInput);\n        txtPrivatePartConfirmation.addEventListener('input', onPrivatePartConfirmationTextInput);\n\n        updatePrivatePartsMatching();\n        btnProtect.title = btnProtectTitleForProtect;\n    }\n}\n","export class TimedAction {\n    private timeout: number | undefined;\n    public constructor(private action: Function, private delay: number) {\n    }\n\n    public reset(overrideDelay: number | undefined = undefined): void {\n        if (this.timeout !== undefined) {\n            clearTimeout(this.timeout);\n        }\n\n        const delay = overrideDelay !== undefined ? overrideDelay : this.delay;\n\n        this.timeout = setTimeout(() => {\n            this.action();\n            this.timeout = undefined;\n        }, delay);\n    }\n}\n","export function arrayToString(array: ArrayBuffer): string {\n    const decoder = new TextDecoder(/*'utf-8'*/);\n    return decoder.decode(array);\n};\n\nexport function copy(source: Uint8Array, sourceIndex: number, target: Uint8Array, targetIndex: number, length: number): void {\n    for (let i: number = 0; i < length; i += 1) {\n        target[i + targetIndex] = source[i + sourceIndex];\n    }\n}\n\nfunction createHeaderedBuffer(buffer: ArrayBuffer): ArrayBuffer {\n    if (buffer.byteLength > 0xFFFF) {\n        throw new Error(`Buffer too large: ${buffer.byteLength} bytes`);\n    }\n\n    let length = buffer.byteLength;\n    const headeredBuffer: Uint8Array = new Uint8Array(2 + buffer.byteLength);\n\n    for (let i: number = 0; i < 2; i += 1) {\n        headeredBuffer[i] = length % 256;\n        length /= 256;\n    }\n\n    headeredBuffer.set(new Uint8Array(buffer), 2);\n\n    return headeredBuffer.buffer;\n}\n\nfunction arrayBufferToUnsignedBigIntWithoutHeader(arrayBuffer: ArrayBuffer): bigint {\n    const length: number = arrayBuffer.byteLength;\n    const arrayView: DataView = new DataView(arrayBuffer, 0);\n\n    let result: bigint = 0n;\n    let multiplier: bigint = 1n;\n\n    for (let i: number = 0; i < length; i += 1) {\n        result += BigInt(arrayView.getUint8(i)) * multiplier;\n        multiplier *= 256n;\n    }\n\n    return result;\n}\n\nfunction arrayBufferToUnsignedBigInt(arrayBuffer: ArrayBuffer): bigint {\n    arrayBuffer = createHeaderedBuffer(arrayBuffer);\n\n    const length: number = arrayBuffer.byteLength;\n    const arrayView: DataView = new DataView(arrayBuffer, 0);\n\n    let result: bigint = 0n;\n    let multiplier: bigint = 1n;\n\n    for (let i: number = 0; i < length; i += 1) {\n        result += BigInt(arrayView.getUint8(i)) * multiplier;\n        multiplier *= 256n;\n    }\n\n    return result;\n}\n\nexport function unsignedBigIntToArrayBuffer(number: bigint): ArrayBuffer {\n    const result: Array<number> = [];\n\n    while (number > 0n)\n    {\n        const remainder: bigint = number % 256n;\n        number /= 256n;\n\n        const byteValue: number = Number(<any>BigInt.asUintN(8, remainder));\n\n        result.push(byteValue);\n    }\n\n    let totalLength: number = result[0];\n    if (result.length > 1) { // For case where original buffer is of length 1 and contains 0.\n        totalLength += result[1] * 256;\n    }\n\n    // The varable 'result' contains 2 bytes of size header.\n    const diff = totalLength - (result.length - 2);\n\n    for (let i: number = 0; i < diff; i += 1) {\n        result.push(0);\n    }\n\n    return new Uint8Array(result.slice(2)).buffer;\n}\n\n// This is a one way encoding in the sense that decoding is not always deterministic.\n// This can be used to generate strings where decoding it doesn't matter.\nexport function toCustomBaseOneWay(bytes: ArrayBuffer, alphabet: string): string {\n    const alphabetLength: bigint = BigInt(alphabet.length);\n\n    let result: string = '';\n    let number: bigint = arrayBufferToUnsignedBigIntWithoutHeader(bytes);\n\n    while (number > 0n)\n    {\n        const remainder: bigint = number % alphabetLength;\n        number /= alphabetLength;\n\n        const index: number = <number><any>BigInt.asUintN(8, remainder);\n\n        result += alphabet[index];\n    }\n\n    return result;\n}\n\nexport function toCustomBase(bytes: ArrayBuffer, alphabet: string): string {\n    const alphabetLength: bigint = BigInt(alphabet.length);\n\n    let result: string = '';\n    let number: bigint = arrayBufferToUnsignedBigInt(bytes);\n\n    while (number > 0n)\n    {\n        const remainder: bigint = number % alphabetLength;\n        number /= alphabetLength;\n\n        const index: number = <number><any>BigInt.asUintN(8, remainder);\n\n        result += alphabet[index];\n    }\n\n    return result;\n}\n\nexport function fromCustomBase(input: string, alphabet: string): ArrayBuffer {\n    const alphabetLength: bigint = BigInt(alphabet.length);\n\n    let number: bigint = 0n;\n    let multiplier: bigint = 1n;\n\n    for (let i: number = 0; i < input.length; i += 1) {\n        const value: bigint = BigInt(alphabet.indexOf(input[i]));\n\n        number += value * multiplier;\n        multiplier *= alphabetLength;\n    }\n\n    return unsignedBigIntToArrayBuffer(number);\n}\n\nexport function toBase16(buffer: ArrayBuffer): string {\n    return Array.prototype.map.call(\n        new Uint8Array(buffer),\n        x => ('00' + x.toString(16)).slice(-2)\n    ).join('');\n}\n","export class TaskCancelledError extends Error {\n    private _name: string;\n\n    public get name(): string {\n        return this._name;\n    }\n\n    constructor(message?: string) {\n        super(message);\n        this._name = TaskCancelledError.ERROR_NAME;\n        Object.setPrototypeOf(this, new.target.prototype);\n    }\n\n    public static readonly ERROR_NAME: string = 'TaskCancelledError';\n\n    public static isMatching(error: Error) {\n        return error && error.name === TaskCancelledError.ERROR_NAME;\n    }\n}\n\nexport class CancellationTokenSource {\n    private _isCancelled: boolean = false;\n    private _token: CancellationToken;\n\n    constructor() {\n        this._token = new CancellationToken(this);\n    }\n\n    public get isCancelled(): boolean {\n        return this._isCancelled;\n    }\n\n    public get token(): CancellationToken {\n        return this._token;\n    }\n\n    public cancel(): void {\n        this._isCancelled = true;\n    }\n}\n\nexport class CancellationToken {\n    private static readonly _none: CancellationToken = new CancellationToken(new CancellationTokenSource());\n    public static get none(): CancellationToken {\n        return CancellationToken._none;\n    }\n\n    constructor(private source: CancellationTokenSource) {\n    }\n\n    public get isCancelled(): boolean {\n        return this.source.isCancelled;\n    }\n}\n\nexport function ensureNotCancelled(cancellationToken: CancellationToken): void {\n    if (cancellationToken.isCancelled) {\n        throw new TaskCancelledError();\n    }\n}\n\nexport function rethrowCancelled(error: Error): void {\n    if (TaskCancelledError.isMatching(error)) {\n        throw error;\n    }\n}\n\nexport type TaskFactory<T> = (cancellationToken: CancellationToken) => Promise<T>;\n\n// Manages the lifetime of a single task, and automatically cancels the previous when running a new one.\n// It also awaits for previous task to be fully terminated before running the new one.\nexport class TaskRunner<TValue> {\n    private currentTokenSource: CancellationTokenSource | null = null;\n    private currentTask: Promise<TValue | undefined> | null = null;\n    private microThreadId: number = 0;\n\n    // Gets a value indicating whether a task is currently running or not.\n    public get isRunning(): boolean {\n        return this.currentTask !== null;\n    }\n\n    // Cancels the currently running task, if any.\n    // Returns true if no one called cancelInternal() when it returns.\n    private async cancelInternal(throwTaskCanceledError: boolean): Promise<boolean> {\n        if (this.microThreadId === Number.MAX_SAFE_INTEGER) {\n            this.microThreadId = 0;\n        } else {\n            this.microThreadId = this.microThreadId + 1;\n        }\n\n        const localMicroThreadId: number = this.microThreadId;\n\n        // This corresponds to the end of cancelAndExecute().\n        if (this.currentTask === null) {\n            return true;\n        }\n\n        if (this.currentTokenSource !== null) {\n            this.currentTokenSource.cancel();\n\n            // The above currentTokenSource.cancel() can run the finally block of cancelAndExecute() and set currentTask to null.\n            if (this.currentTask !== null) {\n                try {\n                    await this.currentTask;\n                } catch (error) {\n                    if (TaskCancelledError.isMatching(error)) {\n                        if (throwTaskCanceledError) {\n                            throw error;\n                        }\n                    } else {\n                        throw error;\n                    }\n                }\n            }\n        }\n\n        return localMicroThreadId === this.microThreadId;\n    }\n\n    // Cancels the currently running task, if any.\n    // throwTaskCanceledError: Pass true allow to throw a TaskCancelledError.\n    // Returns a Promise that completes when the current job is fully cancelled.\n    public async cancel(throwTaskCanceledError: boolean = false): Promise<void> {\n        await this.cancelInternal(throwTaskCanceledError);\n    }\n\n    // Cancels the current task if any, and runs a new one.\n    // T: Type of value returned by the task to run.\n    // taskFactory: A task producer that receives a CancellationToken.\n    // throwTaskCanceledError: Pass true allow to throw a TaskCancelledError.\n    // Returns the task produced by the taskFactory.\n    public async cancelAndExecute(taskFactory: TaskFactory<TValue>, throwTaskCanceledError: boolean = false): Promise<TValue | undefined> {\n        if (await this.cancelInternal(throwTaskCanceledError) === false) {\n            if (throwTaskCanceledError === false) {\n                return undefined;\n            }\n            throw new TaskCancelledError();\n        }\n\n        var localToken = new CancellationTokenSource();\n        this.currentTokenSource = localToken;\n\n        try {\n            this.currentTask = taskFactory(this.currentTokenSource.token);\n            return await this.currentTask;\n        } catch (error) {\n            if (TaskCancelledError.isMatching(error) && throwTaskCanceledError === false) {\n                return undefined;\n            }\n            throw error;\n        } finally {\n            this.currentTask = null;\n        }\n    }\n}\n","import * as arrayUtils from './arrayUtils';\nimport { CancellationToken, ensureNotCancelled } from './asyncUtils';\n\nexport const BASE62_ALPHABET: string = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n\nexport interface IPasswordGenerator {\n    readonly version: number;\n    readonly description: string;\n    generatePassword(privatePart: ArrayBuffer, publicPart: ArrayBuffer, cancellationToken: CancellationToken): Promise<ArrayBuffer>;\n}\n\nexport interface ICipher {\n    readonly version: number;\n    readonly description: string;\n    encrypt(input: ArrayBuffer, password: ArrayBuffer, cancellationToken: CancellationToken): Promise<ArrayBuffer>;\n    decrypt(input: ArrayBuffer, password: ArrayBuffer, cancellationToken: CancellationToken): Promise<ArrayBuffer>;\n}\n\nexport async function getDerivedBytes(password: ArrayBuffer, salt: ArrayBuffer, cancellationToken: CancellationToken): Promise<ArrayBuffer> {\n    const baseKey: CryptoKey = await window.crypto.subtle.importKey(\n        'raw',\n        password,\n        'PBKDF2',\n        false,\n        ['deriveKey']\n    );\n\n    ensureNotCancelled(cancellationToken);\n\n    const algorithm: Pbkdf2Params = {\n        name: 'PBKDF2',\n        hash: 'SHA-512',\n        iterations: 100000,\n        salt\n    };\n\n    const derivedKeyType: AesDerivedKeyParams = {\n        name: 'AES-CBC',\n        length: 256\n    };\n\n    const result: CryptoKey = await window.crypto.subtle.deriveKey(\n        algorithm,\n        baseKey,\n        derivedKeyType,\n        true,\n        ['encrypt']\n    );\n\n    ensureNotCancelled(cancellationToken);\n\n    const key: ArrayBuffer = await window.crypto.subtle.exportKey('raw', result);\n\n    ensureNotCancelled(cancellationToken);\n\n    return key;\n}\n\nexport function generateRandomBytes(byteCount: number = 64): ArrayBuffer {\n    const array: Uint8Array = new Uint8Array(byteCount);\n    return crypto.getRandomValues(array).buffer;\n}\n\nexport function generateRandomString(byteCount: number = 64, alphabet: string = BASE62_ALPHABET): string {\n    const array: ArrayBuffer = generateRandomBytes(byteCount);\n    return arrayUtils.toCustomBaseOneWay(array, alphabet);\n}\n","export function truncate(input: string, length: number): string {\n    if (input.length <= length) {\n        return input;\n    }\n\n    return input.substr(0, length);\n}\n\nexport function stringToArray(str: string): ArrayBuffer {\n    const encoder = new TextEncoder(/*'utf-8'*/);\n    return encoder.encode(str).buffer;\n}\n\nexport function fromBase16(str: string): ArrayBuffer {\n    if (str.length % 2 !== 0) {\n        str = '0' + str;\n    }\n\n    const result: Uint8Array = new Uint8Array(str.length / 2);\n\n    for (let i = 0; i < result.byteLength; i += 1) {\n        result[i] = parseInt(str.substr(i * 2, 2), 16);\n    }\n\n    return result.buffer;\n}\n","import { getElementById, ERROR_COLOR } from '../ui';\nimport { PlainObject } from '../PlainObject';\nimport { IComponent } from './IComponent';\n\nconst divStorageOutput: HTMLInputElement = getElementById('divStorageOutput');\n\nconst txtPath: HTMLInputElement = getElementById('txtPath');\n\nconst txtParameters: HTMLInputElement = getElementById('txtParameters');\nconst txtCustomKeys: HTMLInputElement = getElementById('txtCustomKeys');\n\nfunction isPlainObject(value: any): boolean {\n    return value !== undefined &&\n        value !== null &&\n        value.hasOwnProperty('constructor') === false &&\n        value.constructor.name === 'Object';\n}\n\nfunction objectDeepSort(object: PlainObject): PlainObject {\n    const output: PlainObject = {};\n\n    for (const [key, value] of Object.entries(object).sort((a, b) => a[0].localeCompare(b[0]))) {\n        output[key] = isPlainObject(value) ? objectDeepSort(value) : value;\n    }\n\n    return output;\n}\n\nfunction shallowMerge(source: PlainObject | null, target: PlainObject | null, reservedKeys: string[]): PlainObject {\n    const result: PlainObject = {};\n\n    if (source !== null) {\n        for (const [key, value] of Object.entries(source)) {\n            if (reservedKeys.includes(key) === false) {\n                result[key] = value;\n            }\n        }\n    }\n\n    if (target !== null) {\n        for (const [key, value] of Object.entries(target)) {\n            result[key] = value;\n        }\n    }\n\n    return result;\n}\n\ntype IChainInfo = {\n    head: PlainObject,\n    tailParent: PlainObject,\n    tail: PlainObject\n};\n\n// Transforms a path like \"a/b/c/d\" into a hierarchy of objects like { \"a\": { \"b\": { \"c\": { \"d\": {} } } } }\n// From the result object, head is the root object that contains \"a\", tail is the value of \"d\", and tailParent is the value of \"c\"\nfunction pathToObjectChain(path: string, chainInfo: IChainInfo | undefined = undefined): IChainInfo {\n    const separatorIndex: number = path.indexOf('/');\n\n    const tail: PlainObject = {};\n\n    const firstPath: string = separatorIndex >= 0 ? path.substr(0, separatorIndex) : path;\n    const remainingPath: string | undefined = separatorIndex >= 0 ? path.substr(separatorIndex + 1) : undefined;\n\n    if (chainInfo === undefined) {\n        const node: PlainObject = {};\n        node[firstPath] = tail;\n        chainInfo = {\n            head: node,\n            tailParent: node,\n            tail\n        };\n    } else {\n        chainInfo.tail[firstPath] = tail;\n        chainInfo.tailParent = chainInfo.tail;\n        chainInfo.tail = tail;\n    }\n\n    if (remainingPath) {\n        return pathToObjectChain(remainingPath, chainInfo);\n    }\n\n    return chainInfo;\n}\n\nfunction onPathTextInput() {\n    update();\n}\n\nfunction onCustomKeysTextInput(): void {\n    update();\n}\n\nfunction updateCustomKeysDisplay(isValid: boolean): void {\n    if (isValid) {\n        txtCustomKeys.style.removeProperty('background');\n        return;\n    }\n\n    txtCustomKeys.style.setProperty('background', ERROR_COLOR);\n}\n\nfunction parseCustomKeys(): PlainObject | null {\n    if (txtCustomKeys.value === '') {\n        return {};\n    }\n\n    try {\n        const obj: any = JSON.parse(txtCustomKeys.value);\n        if (obj === null || obj.constructor.name !== 'Object') {\n            return null;\n        }\n        return obj as PlainObject;\n    } catch {\n        return null;\n    }\n}\n\nfunction update(): void {\n    if (_parameterKeys === undefined || _parameterPath === undefined || _reservedKeys === undefined) {\n        return;\n    }\n\n    const chainInfo: IChainInfo = pathToObjectChain(`${txtPath.value}/${_parameterPath}`);\n    const leaf: PlainObject = chainInfo.tail;\n\n    for (const [key, value] of Object.entries(_parameterKeys)) {\n        leaf[key] = value;\n    }\n\n    const customKeys: PlainObject | null = parseCustomKeys();\n    updateCustomKeysDisplay(customKeys !== null);\n    const resultParameters: PlainObject = shallowMerge(customKeys, leaf, _reservedKeys);\n\n    if (Object.keys(resultParameters).length === 0) {\n        // Set the value of the first (single) property of the object to null.\n        chainInfo.tailParent[Object.keys(chainInfo.tailParent)[0]] = null;\n    } else {\n        chainInfo.tailParent[Object.keys(chainInfo.tailParent)[0]] = resultParameters;\n    }\n\n    txtParameters.value = JSON.stringify(objectDeepSort(chainInfo.head), undefined, 4);\n}\n\nexport function clearOutputs(): void {\n    _parameterKeys = undefined;\n    _parameterPath = undefined;\n    _reservedKeys = undefined;\n    txtParameters.value = '';\n}\n\nlet _parameterKeys: PlainObject | undefined;\nlet _parameterPath: string | undefined;\nlet _reservedKeys: string[] | undefined;\n\nexport function setParameters(parameterKeys: PlainObject, parameterPath: string, reservedKeys: string[]) {\n    _parameterKeys = parameterKeys;\n    _parameterPath = parameterPath;\n    _reservedKeys = reservedKeys;\n    update();\n}\n\nexport function show(): void {\n    divStorageOutput.style.setProperty('display', 'initial');\n}\n\nexport function hide(): void {\n    divStorageOutput.style.setProperty('display', 'none');\n}\n\nexport class StorageOutputComponent implements IComponent {\n    init(): void {\n        txtCustomKeys.addEventListener('input', onCustomKeysTextInput);\n        txtPath.addEventListener('input', onPathTextInput);\n    }\n}\n","import * as ui from '../ui';\nimport * as privatePartComponent from './privatePartComponent';\n\nimport * as crypto from '../crypto';\nimport * as stringUtils from '../stringUtils';\nimport * as arrayUtils from '../arrayUtils';\n\nimport { PlainObject } from '../PlainObject';\nimport { PasswordGeneratorV1 } from '../passwordGenerators/v1';\nimport { ITabInfo } from '../TabControl';\nimport { IComponent } from './IComponent';\n\nimport * as storageOutputComponent from './storageOutputComponent';\n\nimport { CancellationToken, TaskRunner } from '../asyncUtils';\n\nconst btnTabPasswords: HTMLInputElement = ui.getElementById('btnTabPasswords');\nconst divTabPasswords: HTMLInputElement = ui.getElementById('divTabPasswords');\n\nconst passwordGenerator: crypto.IPasswordGenerator = new PasswordGeneratorV1('Password');\n\nconst txtPublicPart: HTMLInputElement = ui.getElementById('txtPublicPart');\nconst spnPublicPartSize: HTMLInputElement = ui.getElementById('spnPublicPartSize');\nconst btnGeneratePublicPart: HTMLInputElement = ui.getElementById('btnGeneratePublicPart');\nconst btnClearPublicPart: HTMLInputElement = ui.getElementById('btnClearPublicPart');\nconst btnCopyPublicPart: HTMLInputElement = ui.getElementById('btnCopyPublicPart');\nconst btnShowHidePasswordOptionalFeatures: HTMLInputElement = ui.getElementById('btnShowHidePasswordOptionalFeatures');\n\nconst lblAlphabetLength: HTMLInputElement = ui.getElementById('lblAlphabetLength');\nconst numOutputSizeRange: HTMLInputElement = ui.getElementById('numOutputSizeRange');\nconst numOutputSizeNum: HTMLInputElement = ui.getElementById('numOutputSizeNum');\n\nconst lblAlphabet: HTMLInputElement = ui.getElementById('lblAlphabet');\nconst txtAlphabet: HTMLInputElement = ui.getElementById('txtAlphabet');\nconst spnAlphabetSize: HTMLInputElement = ui.getElementById('spnAlphabetSize');\nconst divPasswordAlphabetActions: HTMLInputElement = ui.getElementById('divPasswordAlphabetActions');\nconst btnResetAlphabet: HTMLInputElement = ui.getElementById('btnResetAlphabet');\n\nconst txtResultPassword: HTMLInputElement = ui.getElementById('txtResultPassword');\nconst spnResultPasswordLength: HTMLInputElement = ui.getElementById('spnResultPasswordLength');\nconst btnViewResultPassword: HTMLInputElement = ui.getElementById('btnViewResultPassword');\nconst btnCopyResultPassword: HTMLInputElement = ui.getElementById('btnCopyResultPassword');\nconst lblGeneratingPassword: HTMLInputElement = ui.getElementById('lblGeneratingPassword');\n\nconst DEFAULT_LENGTH: number = 64;\nconst DEFAULT_ALPHABET: string = '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~';\n\nconst RESERVED_KEYS: string[] = ['alphabet', 'length', 'public', 'datetime'];\n\nlet passwordPublicPartLastChange: string | undefined;\nlet copyPasswordFunction: () => void;\n\nfunction onClearPublicPartButtonClick(): boolean {\n    if (txtPublicPart.value.length > 0) {\n        if (prompt('Are you sure you want to clear the public part ?\\nType \\'y\\' to accept', '') !== 'y') {\n            return false;\n        }\n    }\n\n    txtPublicPart.value = '';\n    updatePublicPartSize();\n\n    updatePasswordPublicPartLastUpdate();\n    updatePasswordGenerationParameters();\n\n    return true;\n}\n\nfunction onGeneratePublicPartButtonClick(): boolean {\n    if (txtPublicPart.value.length > 0) {\n        if (prompt('Are you sure you want to generate a new public part ?\\nType \\'y\\' to accept', '') !== 'y') {\n            return false;\n        }\n    }\n\n    const randomString: string = crypto.generateRandomString();\n    txtPublicPart.value = randomString;\n    updatePublicPartSize();\n\n    updatePasswordPublicPartLastUpdate();\n\n    run(CancellationToken.none);\n\n    return true;\n}\n\nfunction updatePasswordPublicPartLastUpdate(): void {\n    if (txtPublicPart.value.length > 0) {\n        passwordPublicPartLastChange = new Date().toISOString();\n    } else {\n        passwordPublicPartLastChange = undefined;\n    }\n}\n\nfunction deepMerge(source: PlainObject, target: PlainObject): void {\n    for (const sourceKey of Object.keys(source)) {\n        const targetValue: any = target[sourceKey];\n        const sourceValue: any = source[sourceKey];\n\n        if (targetValue === undefined ||\n            targetValue === null ||\n            targetValue.constructor.name !== 'Object' ||\n            sourceValue.constructor.name !== 'Object') {\n            target[sourceKey] = sourceValue;\n            continue;\n        }\n\n        deepMerge(sourceValue, targetValue);\n    }\n}\n\nfunction updateResultPasswordLength(): void {\n    spnResultPasswordLength.innerHTML = txtResultPassword.value.length.toString();\n}\n\nfunction isAlphabetValid(alphabet: string): boolean {\n    const sortedAlphabet: string[] = alphabet.split('');\n    sortedAlphabet.sort();\n\n    for (let i: number = 1; i < sortedAlphabet.length; i += 1) {\n        if (sortedAlphabet[i - 1] === sortedAlphabet[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction updatePasswordGenerationParameters(): void {\n    if (canRun() === false) {\n        clearOutputs();\n        return;\n    }\n\n    const passwordParamters: PlainObject = {\n        public: txtPublicPart.value,\n        datetime: passwordPublicPartLastChange\n    };\n\n    const numericValue: number = txtResultPassword.value.length;\n    if (numericValue !== DEFAULT_LENGTH) {\n        passwordParamters.length = numericValue;\n    }\n\n    const alphabet: string = txtAlphabet.value;\n    if (alphabet !== DEFAULT_ALPHABET) {\n        passwordParamters.alphabet = alphabet;\n    }\n\n    storageOutputComponent.setParameters(passwordParamters, 'password', RESERVED_KEYS);\n}\n\nfunction updateOutputSizeRangeToNum(): void {\n    numOutputSizeNum.value = numOutputSizeRange.value;\n}\n\nfunction updateOutputSizeNumToRange(): boolean {\n    const min: number = parseInt(numOutputSizeRange.min, 10);\n    const val: number = parseInt(numOutputSizeNum.value, 10);\n    const max: number = parseInt(numOutputSizeRange.max, 10);\n\n    if (isNaN(val) === false) {\n        numOutputSizeRange.value = Math.max(min, Math.min(val, max)).toString();\n        return true;\n    }\n\n    return false;\n}\n\nasync function onOutputSizeRangeInput(): Promise<void> {\n    updateOutputSizeRangeToNum();\n    await run(CancellationToken.none);\n}\n\nasync function onOutputSizeNumInput(): Promise<void> {\n    if (updateOutputSizeNumToRange()) {\n        updateOutputSizeRangeToNum();\n    }\n    await run(CancellationToken.none);\n}\n\nfunction updatePublicPartSize(): void {\n    spnPublicPartSize.innerHTML = txtPublicPart.value.length.toString();\n}\n\nfunction updateAlphabetSize(): void {\n    spnAlphabetSize.innerHTML = txtAlphabet.value.length.toString();\n}\n\nfunction updateAlphabetValidityDisplay(isAlphabetValid: boolean): void {\n    if (isAlphabetValid) {\n        txtAlphabet.style.removeProperty('background');\n    } else {\n        txtAlphabet.style.setProperty('background', ui.ERROR_COLOR);\n    }\n}\n\nasync function onAlphabetTextInput(): Promise<void> {\n    const isAlphabetValidResult: boolean = isAlphabetValid(txtAlphabet.value);\n\n    updateAlphabetValidityDisplay(isAlphabetValidResult);\n\n    if (isAlphabetValidResult === false) {\n        return;\n    }\n\n    updateAlphabetSize();\n    await run(CancellationToken.none);\n}\n\nasync function onResetAlphabetButtonClick(): Promise<boolean> {\n    if (resetAlphabet() === false) {\n        return false;\n    }\n\n    await run(CancellationToken.none);\n\n    return true;\n}\n\nfunction clearOutputs(): void {\n    txtResultPassword.value = '';\n    storageOutputComponent.clearOutputs();\n    updateResultPasswordLength();\n}\n\nfunction canRun(publicPart?: string): boolean {\n    const alphabet: string = txtAlphabet.value;\n\n    if (isAlphabetValid(alphabet) === false) {\n        return false;\n    }\n\n    publicPart = publicPart || txtPublicPart.value;\n\n    if (privatePartComponent.getPrivatePart().length <= 0 || publicPart.length < 8 || alphabet.length < 2) {\n        return false;\n    }\n\n    return true;\n}\n\nexport async function generatePasswordString(publicPart: string, cancellationToken: CancellationToken): Promise<string | null> {\n    if (canRun(publicPart) === false) {\n        return null;\n    }\n\n    const privatePartString: string = privatePartComponent.getPrivatePart();\n    const privatePrivateBytes: ArrayBuffer = stringUtils.stringToArray(privatePartString);\n    const publicPartBytes: ArrayBuffer = stringUtils.stringToArray(publicPart);\n    const keyBytes: ArrayBuffer = await passwordGenerator.generatePassword(privatePrivateBytes, publicPartBytes, cancellationToken);\n\n    return arrayUtils.toCustomBaseOneWay(keyBytes, txtAlphabet.value);\n}\n\nconst passwordTaskRunner: TaskRunner<void> = new TaskRunner<void>();\n\nasync function run(cancellationToken: CancellationToken): Promise<void> {\n    if (canRun() === false) {\n        clearOutputs();\n        return;\n    }\n\n    ui.showHide(lblGeneratingPassword, true);\n\n    try {\n        await passwordTaskRunner.cancelAndExecute(runCore);\n    } finally {\n        ui.showHide(lblGeneratingPassword, false);\n    }\n}\n\nasync function runCore(cancellationToken: CancellationToken): Promise<void> {\n    const keyString: string | null = await generatePasswordString(txtPublicPart.value, cancellationToken);\n    if (keyString === null) {\n        return;\n    }\n\n    txtResultPassword.value = stringUtils.truncate(keyString, Math.max(4, parseInt(numOutputSizeRange.value, 10)));\n\n    updateResultPasswordLength();\n    updatePasswordGenerationParameters();\n\n    copyPasswordFunction();\n}\n\nfunction resetAlphabet(): boolean {\n    txtAlphabet.value = DEFAULT_ALPHABET;\n    updateAlphabetSize();\n\n    const isAlphabetValidResult: boolean = isAlphabetValid(txtAlphabet.value);\n\n    updateAlphabetValidityDisplay(isAlphabetValidResult);\n\n    return isAlphabetValidResult;\n}\n\nasync function onPublicPartTextInput(): Promise<void> {\n    updatePublicPartSize();\n    updatePasswordPublicPartLastUpdate();\n    await run(CancellationToken.none);\n}\n\nexport class PasswordComponent implements IComponent, ITabInfo {\n    getTabButton(): HTMLInputElement {\n        return btnTabPasswords;\n    }\n    getTabContent(): HTMLInputElement {\n        return divTabPasswords;\n    }\n    onTabSelected(): void {\n        storageOutputComponent.show();\n        updatePasswordGenerationParameters();\n    }\n\n    init(): void {\n        privatePartComponent.registerOnChanged(async () => await run(CancellationToken.none));\n\n        // dafuq!?\n        numOutputSizeRange.max = DEFAULT_LENGTH.toString();\n        numOutputSizeRange.value = DEFAULT_LENGTH.toString();\n\n        ui.setupFeedbackButton(btnClearPublicPart, onClearPublicPartButtonClick);\n        ui.setupFeedbackButton(btnGeneratePublicPart, onGeneratePublicPartButtonClick);\n\n        ui.setupViewButton(txtResultPassword, btnViewResultPassword);\n\n        ui.setupCopyButton(txtPublicPart, btnCopyPublicPart);\n        copyPasswordFunction = ui.setupCopyButton(txtResultPassword, btnCopyResultPassword);\n\n        numOutputSizeRange.addEventListener('input', onOutputSizeRangeInput);\n        numOutputSizeNum.addEventListener('input', onOutputSizeNumInput);\n\n        txtAlphabet.addEventListener('input', onAlphabetTextInput);\n        ui.setupFeedbackButton(btnResetAlphabet, onResetAlphabetButtonClick);\n\n        txtPublicPart.addEventListener('input', onPublicPartTextInput);\n\n        ui.showHide(lblGeneratingPassword, false);\n\n        ui.setupShowHideButton(btnShowHidePasswordOptionalFeatures, false, [\n            lblAlphabet,\n            txtAlphabet,\n            spnAlphabetSize,\n            divPasswordAlphabetActions,\n            lblAlphabetLength,\n            numOutputSizeRange,\n            numOutputSizeNum\n        ]);\n\n        updatePublicPartSize();\n        updateOutputSizeRangeToNum();\n        resetAlphabet();\n    }\n};\n","import { stringToArray } from '../stringUtils';\nimport { IPasswordGenerator, getDerivedBytes } from '../crypto';\nimport { CancellationToken, ensureNotCancelled } from '../asyncUtils';\n\nexport class PasswordGeneratorV1 implements IPasswordGenerator {\n    private hkdfPurpose: ArrayBuffer;\n    private _description: string;\n\n    public constructor(hkdfPurpose: string) {\n        this.hkdfPurpose = stringToArray(hkdfPurpose);\n        this._description = `HKDF(PBKDF2, HMAC512) [purpose: ${hkdfPurpose}]`;\n    }\n\n    public get version(): number {\n        return 1;\n    }\n\n    public get description(): string {\n        return this._description;\n    }\n\n    public async generatePassword(privatePart: ArrayBuffer, publicPart: ArrayBuffer, cancellationToken: CancellationToken): Promise<ArrayBuffer> {\n        const derivedKey: ArrayBuffer = await getDerivedBytes(privatePart, publicPart, cancellationToken);\n\n        ensureNotCancelled(cancellationToken);\n\n        const hmacParameters: HmacImportParams = {\n            name: 'HMAC',\n            hash: { name: 'SHA-512' }\n        };\n\n        const hkdfKey: CryptoKey = await window.crypto.subtle.importKey(\n            'raw',\n            derivedKey,\n            hmacParameters,\n            false,\n            ['sign']\n        );\n\n        ensureNotCancelled(cancellationToken);\n\n        const result: ArrayBuffer = await window.crypto.subtle.sign('HMAC', hkdfKey, this.hkdfPurpose);\n\n        ensureNotCancelled(cancellationToken);\n\n        return result;\n    }\n}\n","import { ICipher, getDerivedBytes } from '../crypto';\nimport { CancellationToken, ensureNotCancelled } from '../asyncUtils';\n\nexport class CipherV2 implements ICipher {\n    public get version(): number {\n        return 2;\n    }\n\n    public get description(): string {\n        return 'PBKDF2 + AES-GCM';\n    }\n\n    async encrypt(input: ArrayBuffer, password: ArrayBuffer, cancellationToken: CancellationToken): Promise<ArrayBuffer> {\n        const output: ArrayBuffer = new ArrayBuffer(12 + 16 + 16 + input.byteLength);\n\n        const nonce: Uint8Array = crypto.getRandomValues(new Uint8Array(output, 0, 12));\n        const passwordSalt: Uint8Array = crypto.getRandomValues(new Uint8Array(output, 12, 16));\n\n        const aesGcmParams: AesGcmParams = {\n            name: 'AES-GCM',\n            iv: nonce\n        };\n\n        const aesKeyAlgorithm: AesKeyAlgorithm = {\n            name: 'AES-GCM',\n            length: 256\n        };\n\n        const passwordKey: CryptoKey = await window.crypto.subtle.importKey(\n            'raw',\n            await getDerivedBytes(password, passwordSalt, cancellationToken),\n            aesKeyAlgorithm,\n            false,\n            ['encrypt']\n        );\n\n        ensureNotCancelled(cancellationToken);\n\n        const result: ArrayBuffer = await window.crypto.subtle.encrypt(aesGcmParams, passwordKey, input);\n\n        ensureNotCancelled(cancellationToken);\n\n        new Uint8Array(output).set(new Uint8Array(result), 12 + 16);\n\n        return output;\n    }\n\n    async decrypt(input: ArrayBuffer, password: ArrayBuffer, cancellationToken: CancellationToken): Promise<ArrayBuffer> {\n        const nonce: Uint8Array = new Uint8Array(input, 0, 12);\n        const passwordSalt: Uint8Array = new Uint8Array(input, 12, 16);\n        const payload: Uint8Array = new Uint8Array(input, 12 + 16);\n\n        const aesGcmParams: AesGcmParams = {\n            name: 'AES-GCM',\n            iv: nonce\n        };\n\n        const aesKeyAlgorithm: AesKeyAlgorithm = {\n            name: 'AES-GCM',\n            length: 256\n        };\n\n        const derivedKey: ArrayBuffer = await getDerivedBytes(password, passwordSalt, cancellationToken);\n\n        ensureNotCancelled(cancellationToken);\n\n        const passwordKey: CryptoKey = await window.crypto.subtle.importKey(\n            'raw',\n            derivedKey,\n            aesKeyAlgorithm,\n            false,\n            ['decrypt']\n        );\n\n        ensureNotCancelled(cancellationToken);\n\n        const result: ArrayBuffer = await window.crypto.subtle.decrypt(aesGcmParams, passwordKey, payload);\n\n        ensureNotCancelled(cancellationToken);\n\n        return result;\n    }\n}\n","import * as crypto from '../crypto';\nimport * as stringUtils from '../stringUtils';\nimport * as arrayUtils from '../arrayUtils';\n\nimport * as ui from '../ui';\nimport { getPrivatePart } from './privatePartComponent';\n\nimport { CipherV2 } from '../ciphers/v2';\nimport { ITabInfo } from '../TabControl';\nimport { IComponent } from './IComponent';\n\nimport * as storageOutputComponent from './storageOutputComponent';\n\nimport { CancellationToken, ensureNotCancelled, rethrowCancelled } from '../asyncUtils';\n\nconst RESERVED_KEYS: string[] = ['version', 'value'];\n\nconst btnTabCiphers: HTMLInputElement = ui.getElementById('btnTabCiphers');\nconst divTabCiphers: HTMLInputElement = ui.getElementById('divTabCiphers');\n\nconst cipher: crypto.ICipher = new CipherV2();\n\nconst txtCipherName: HTMLInputElement = ui.getElementById('txtCipherName');\nconst txtCipherSource: HTMLInputElement = ui.getElementById('txtCipherSource');\nconst txtCipherTarget: HTMLInputElement = ui.getElementById('txtCipherTarget');\nconst btnEncrypt: HTMLInputElement = ui.getElementById('btnEncrypt');\nconst btnDecrypt: HTMLInputElement = ui.getElementById('btnDecrypt');\n\nconst btnClearCipherSource: HTMLInputElement = ui.getElementById('btnClearCipherSource');\nconst btnCopyCipherTarget: HTMLInputElement = ui.getElementById('btnCopyCipherTarget');\nconst btnClearCipherTarget: HTMLInputElement = ui.getElementById('btnClearCipherTarget');\n\nfunction clearSourceVisualCue(): void {\n    txtCipherSource.style.removeProperty('background-color');\n}\n\nfunction clearTargetVisualCue(): void {\n    txtCipherTarget.style.removeProperty('background-color');\n}\n\nfunction setSourceVisualCueError() {\n    txtCipherSource.style.setProperty('background-color', ui.ERROR_COLOR);\n}\n\nfunction setTargetVisualCueError() {\n    txtCipherTarget.style.setProperty('background-color', ui.ERROR_COLOR);\n}\n\nfunction clearAllVisualCues(): void {\n    clearSourceVisualCue();\n    clearTargetVisualCue();\n}\n\nfunction setCipherTargetValue(value: string): void {\n    txtCipherTarget.value = value;\n    onCipherTargetChanged();\n}\n\nfunction onCipherTargetChanged(): void {\n    updateCipherParameters();\n}\n\nfunction updateCipherParameters(): void {\n    if (txtCipherTarget.value === '' || txtCipherName.value === '') {\n        storageOutputComponent.clearOutputs();\n        return;\n    }\n\n    const cipherParameters = {\n        version: cipher.version,\n        value: txtCipherTarget.value\n    }\n\n    const path = `ciphers/${txtCipherName.value}`;\n\n    storageOutputComponent.setParameters(cipherParameters, path, RESERVED_KEYS);\n}\n\nexport async function encryptString(value: string, cancellationToken: CancellationToken): Promise<string | null> {\n    const privatePart: string = getPrivatePart();\n    if (privatePart.length === 0) {\n        console.warn('Private part is empty');\n        return null;\n    }\n\n    const input: ArrayBuffer = stringUtils.stringToArray(value);\n    const password: ArrayBuffer = stringUtils.stringToArray(privatePart);\n\n    const encrypted: ArrayBuffer = await cipher.encrypt(input, password, cancellationToken);\n\n    ensureNotCancelled(cancellationToken);\n\n    return arrayUtils.toCustomBase(encrypted, crypto.BASE62_ALPHABET);\n}\n\nexport async function decryptString(value: string, cancellationToken: CancellationToken): Promise<string | null> {\n    const privatePart: string = getPrivatePart();\n    if (privatePart.length === 0) {\n        console.warn('Private part is empty');\n        return null;\n    }\n\n    try {\n        const input: ArrayBuffer = arrayUtils.fromCustomBase(value, crypto.BASE62_ALPHABET);\n        const password: ArrayBuffer = stringUtils.stringToArray(privatePart);\n\n        const decrypted: ArrayBuffer = await cipher.decrypt(input, password, cancellationToken);\n\n        ensureNotCancelled(cancellationToken);\n\n        return arrayUtils.arrayToString(decrypted);\n    } catch (error) {\n        rethrowCancelled(error);\n\n        console.warn(`Failed to decrypt${error.message ? `, error: ${error.message}` : ', no error message'}`);\n        return null;\n    }\n}\n\nasync function onEncryptButtonClick(): Promise<boolean> {\n    txtCipherSource.focus();\n    setCipherTargetValue('');\n    clearAllVisualCues();\n\n    if (txtCipherSource.value.length === 0) {\n        setSourceVisualCueError();\n        return false;\n    }\n\n    const encryptedString: string | null = await encryptString(txtCipherSource.value, CancellationToken.none);\n\n    if (encryptedString === null) {\n        return false;\n    }\n\n    setCipherTargetValue(encryptedString);\n\n    return true;\n}\n\nasync function onDecryptButtonClick(): Promise<boolean> {\n    txtCipherSource.focus();\n    setCipherTargetValue('');\n    clearAllVisualCues();\n\n    if (txtCipherSource.value.length === 0) {\n        setSourceVisualCueError();\n        return false;\n    }\n\n    const decryptedString: string | null = await decryptString(txtCipherSource.value, CancellationToken.none);\n\n    if (decryptedString === null) {\n        setTargetVisualCueError();\n        return false;\n    }\n\n    setCipherTargetValue(decryptedString);\n\n    return true;\n}\n\nexport class CipherComponent implements IComponent, ITabInfo {\n    getTabButton(): HTMLInputElement {\n        return btnTabCiphers;\n    }\n    getTabContent(): HTMLInputElement {\n        return divTabCiphers;\n    }\n    onTabSelected(): void {\n        storageOutputComponent.show();\n        updateCipherParameters();\n    }\n\n    init(): void {\n        ui.setupCopyButton(txtCipherTarget, btnCopyCipherTarget);\n\n        ui.setupFeedbackButton(btnEncrypt, onEncryptButtonClick);\n        ui.setupFeedbackButton(btnDecrypt, onDecryptButtonClick);\n\n        txtCipherName.addEventListener('input', () => {\n            updateCipherParameters();\n        });\n\n        txtCipherSource.addEventListener('input', () => {\n            if (txtCipherSource.value.length > 0) {\n                clearSourceVisualCue();\n            }\n        });\n\n        btnClearCipherSource.addEventListener('click', () => {\n            txtCipherSource.value = '';\n        });\n\n        btnClearCipherTarget.addEventListener('click', () => {\n            setCipherTargetValue('');\n        });\n    }\n}\n","import { ICipher, getDerivedBytes } from '../crypto';\nimport { CancellationToken, ensureNotCancelled } from '../asyncUtils';\n\nconst encryptionKeyDerivationSalt: ArrayBuffer = new Uint8Array([ 0xf2, 0xcf, 0xef, 0x8e, 0x13, 0x40, 0x46, 0x49, 0x92, 0x2a, 0xde, 0x5c, 0xbc, 0x88, 0x38, 0xa8 ]).buffer;\n\nexport class CipherV1 implements ICipher {\n    public get version(): number {\n        return 1;\n    }\n\n    public get description(): string {\n        return 'PBKDF2 + AES-GCM';\n    }\n\n    async encrypt(input: ArrayBuffer, password: ArrayBuffer, cancellationToken: CancellationToken): Promise<ArrayBuffer> {\n        const output: ArrayBuffer = new ArrayBuffer(12 + 16 + input.byteLength);\n\n        const nonce: DataView = new DataView(output, 0, 12);\n        crypto.getRandomValues(new Uint8Array(output, 0, 12));\n\n        const aesGcmParams: AesGcmParams = {\n            name: 'AES-GCM',\n            iv: nonce\n        };\n\n        const aesKeyAlgorithm: AesKeyAlgorithm = {\n            name: 'AES-GCM',\n            length: 256\n        };\n\n        const passwordKey: CryptoKey = await window.crypto.subtle.importKey(\n            'raw',\n            await getDerivedBytes(password, encryptionKeyDerivationSalt, cancellationToken),\n            aesKeyAlgorithm,\n            false,\n            ['encrypt']\n        );\n\n        ensureNotCancelled(cancellationToken);\n\n        const result: ArrayBuffer = await window.crypto.subtle.encrypt(aesGcmParams, passwordKey, input);\n\n        ensureNotCancelled(cancellationToken);\n\n        new Uint8Array(output).set(new Uint8Array(result), 12);\n\n        return output;\n    }\n\n    async decrypt(input: ArrayBuffer, password: ArrayBuffer, cancellationToken: CancellationToken): Promise<ArrayBuffer> {\n        const nonce: DataView = new DataView(input, 0, 12);\n        const payload: DataView = new DataView(input, 12);\n\n        const aesGcmParams: AesGcmParams = {\n            name: 'AES-GCM',\n            iv: nonce\n        };\n\n        const aesKeyAlgorithm: AesKeyAlgorithm = {\n            name: 'AES-GCM',\n            length: 256\n        };\n\n        const derivedKey: ArrayBuffer = await getDerivedBytes(password, encryptionKeyDerivationSalt, cancellationToken);\n\n        ensureNotCancelled(cancellationToken);\n\n        const passwordKey: CryptoKey = await window.crypto.subtle.importKey(\n            'raw',\n            derivedKey,\n            aesKeyAlgorithm,\n            false,\n            ['decrypt']\n        );\n\n        ensureNotCancelled(cancellationToken);\n\n        const result: ArrayBuffer = await window.crypto.subtle.decrypt(aesGcmParams, passwordKey, payload);\n\n        ensureNotCancelled(cancellationToken);\n\n        return result;\n    }\n}\n","import { ICipher } from '../crypto';\nimport * as stringUtils from '../stringUtils';\nimport * as arrayUtils from '../arrayUtils';\nimport { ITabInfo } from '../TabControl';\nimport * as ui from '../ui';\nimport { getPrivatePart } from './privatePartComponent';\n\nimport { CipherV1 } from '../ciphers/v1';\nimport { CipherV2 } from '../ciphers/v2';\nimport { IComponent } from './IComponent';\n\nimport * as storageOutputComponent from './storageOutputComponent';\n\nimport { CancellationToken } from '../asyncUtils';\n\nconst ciphers: ICipher[] = [\n    new CipherV1(),\n    new CipherV2()\n];\n\nconst btnTabReEncrypt: HTMLInputElement = ui.getElementById('btnTabReEncrypt');\nconst divTabReEncrypt: HTMLInputElement = ui.getElementById('divTabReEncrypt');\n\nconst txtReEncryptSource: HTMLInputElement = ui.getElementById('txtReEncryptSource');\nconst txtReEncryptTarget: HTMLInputElement = ui.getElementById('txtReEncryptTarget');\n\nconst cboReEncryptFrom: HTMLInputElement = ui.getElementById('cboReEncryptFrom');\nconst cboReEncryptTo: HTMLInputElement = ui.getElementById('cboReEncryptTo');\nconst btnReEncrypt: HTMLInputElement = ui.getElementById('btnReEncrypt');\n\nconst btnClearReEncryptSource: HTMLInputElement = ui.getElementById('btnClearReEncryptSource');\nconst btnCopyReEncryptTarget: HTMLInputElement = ui.getElementById('btnCopyReEncryptTarget');\nconst btnClearReEncryptTarget: HTMLInputElement = ui.getElementById('btnClearReEncryptTarget');\n\nfunction fillCipherComboBox(cbo: HTMLSelectElement, initialValue: number): void {\n    let cipher: ICipher;\n\n    for (cipher of ciphers) {\n        const item: HTMLOptionElement = document.createElement('option');\n        item.value = cbo.childNodes.length.toString();\n        item.text = `${cipher.description} (v${cipher.version})`;\n        cbo.add(item);\n    }\n\n    cbo.value = initialValue.toString();\n}\n\nfunction clearSourceVisualCue(): void {\n    txtReEncryptSource.style.removeProperty('background-color');\n}\n\nfunction clearTargetVisualCue(): void {\n    txtReEncryptTarget.style.removeProperty('background-color');\n}\n\nfunction setSourceVisualCueError() {\n    txtReEncryptSource.style.setProperty('background-color', ui.ERROR_COLOR);\n}\n\nfunction setTargetVisualCueError() {\n    txtReEncryptTarget.style.setProperty('background-color', ui.ERROR_COLOR);\n}\n\nfunction clearAllVisualCues(): void {\n    clearSourceVisualCue();\n    clearTargetVisualCue();\n}\n\nasync function onReEncryptButtonClick(): Promise<boolean> {\n    txtReEncryptTarget.value = '';\n    clearAllVisualCues();\n\n    if (txtReEncryptSource.value.length === 0) {\n        setSourceVisualCueError();\n        return false;\n    }\n\n    if (cboReEncryptFrom.value === cboReEncryptTo.value) {\n        setTargetVisualCueError();\n        return false;\n    }\n\n    const privatePart: string = getPrivatePart();\n    if (privatePart.length === 0) {\n        console.warn('Private part is empty');\n        return false;\n    }\n\n    const sourceCipherIndex = parseInt(cboReEncryptFrom.value, 10);\n    const targetCipherIndex = parseInt(cboReEncryptTo.value, 10);\n\n    const password: ArrayBuffer = stringUtils.stringToArray(privatePart);\n\n    const input: ArrayBuffer = stringUtils.fromBase16(txtReEncryptSource.value);\n    const decrypted: ArrayBuffer = await ciphers[sourceCipherIndex].decrypt(input, password, CancellationToken.none);\n    const reEncrypted: ArrayBuffer = await ciphers[targetCipherIndex].encrypt(decrypted, password, CancellationToken.none);\n\n    txtReEncryptTarget.value = arrayUtils.toBase16(reEncrypted);\n\n    return true;\n}\n\nexport class ReEncryptComponent implements IComponent, ITabInfo {\n    getTabButton(): HTMLInputElement {\n        return btnTabReEncrypt;\n    }\n    getTabContent(): HTMLInputElement {\n        return divTabReEncrypt;\n    }\n    onTabSelected() {\n        storageOutputComponent.hide();\n    }\n\n    init(): void {\n        ui.setupCopyButton(txtReEncryptTarget, btnCopyReEncryptTarget);\n\n        // Mais est-ce que ce monde est serieux?\n        fillCipherComboBox(<HTMLSelectElement><any>cboReEncryptFrom, ciphers.length - 2);\n        fillCipherComboBox(<HTMLSelectElement><any>cboReEncryptTo, ciphers.length - 1);\n\n        txtReEncryptSource.addEventListener('input', () => {\n            if (txtReEncryptSource.value.length > 0) {\n                clearSourceVisualCue();\n            }\n        });\n\n        btnClearReEncryptSource.addEventListener('click', () => {\n            txtReEncryptSource.value = '';\n        });\n\n        btnClearReEncryptTarget.addEventListener('click', () => {\n            txtReEncryptTarget.value = '';\n        });\n\n        ui.setupFeedbackButton(btnReEncrypt, onReEncryptButtonClick);\n    }\n}\n","import * as passwordComponent from '../components/passwordComponent';\n\nimport { SecureLocalStorage } from './SecureLocalStorage';\nimport { IVaultStorage } from './IVaultStorage';\nimport { PlainObject } from '../PlainObject';\n\nimport { CancellationToken } from '../asyncUtils';\n\ninterface IApp {\n    name: string;\n}\n\ninterface IAuthorization {\n    id: number;\n    app: IApp;\n}\n\ninterface IGitHubContent {\n    sha: string;\n    content: string;\n}\n\nexport abstract class GitHubVaultStorageBase implements IVaultStorage {\n    static BASE_URL: string = 'https://api.github.com';\n    static AUTH_TOKEN_KEY_NAME: string = 'GitHubVaultStorageBase.AuthToken';\n\n    private token: string | null = null;\n    private oneTimePassword: string | null = null;\n    private currentVaultContentHash: string | null = null;\n\n    private username: string | null = null;\n    private repositoryName: string | null = null;\n    private vaultFilename: string | null = null;\n\n    static LOCAL_STORAGE_KEY_USERNAME: string = 'GitHubVaultStorageBase.Username';\n    static LOCAL_STORAGE_KEY_REPO: string = 'GitHubVaultStorageBase.Repository';\n    static LOCAL_STORAGE_KEY_FILENAME: string = 'GitHubVaultStorageBase.Filename';\n\n    protected getUsername(): string | null {\n        return this.username;\n    }\n\n    protected getRepositoryName(): string | null {\n        return this.repositoryName;\n    }\n\n    protected getVaultFilename(): string | null {\n        return this.vaultFilename;\n    }\n\n    public constructor(protected secureLocalStorage: SecureLocalStorage) {\n    }\n\n    public clear(): void {\n        this.secureLocalStorage.removeItem(GitHubApiVaultStorage.LOCAL_STORAGE_KEY_USERNAME);\n        this.secureLocalStorage.removeItem(GitHubApiVaultStorage.LOCAL_STORAGE_KEY_REPO);\n        this.secureLocalStorage.removeItem(GitHubApiVaultStorage.LOCAL_STORAGE_KEY_FILENAME);\n\n        this.secureLocalStorage.removeItem(GitHubVaultStorageBase.AUTH_TOKEN_KEY_NAME);\n    }\n\n    private constructTokenAuthString(): string {\n        return `token ${this.token}`;\n    }\n\n    private constructFetchRequest(method: string, authHeader: string, body: any): RequestInit {\n        const headers: PlainObject = {\n            'Accept': 'application/vnd.github.v3+json',\n            'Content-Type': 'application/json',\n            'Authorization': authHeader\n        };\n\n        if (this.oneTimePassword) {\n            headers['x-github-otp'] = this.oneTimePassword;\n        }\n\n        return {\n            method,\n            headers,\n            body: body ? JSON.stringify(body) : undefined\n        };\n    }\n\n    private constructUrl(relativeUrl: string): string {\n        return `${GitHubVaultStorageBase.BASE_URL}${relativeUrl}`;\n    }\n\n    protected async request(retryOnUnauthorized: boolean, method: string, relativeUrl: string, authHeader: string, body: any = undefined): Promise<Response | null> {\n        const url: string = this.constructUrl(relativeUrl);\n        const requestInfo: RequestInit = this.constructFetchRequest(method, authHeader, body);\n\n        let response: Response = await fetch(url, requestInfo);\n\n        if (response.status === 401 && retryOnUnauthorized) {\n            this.oneTimePassword = prompt('Input your 2FA code:');\n\n            if (!this.oneTimePassword) {\n                return null;\n            }\n\n            return await this.request(retryOnUnauthorized, method, relativeUrl, authHeader, body);\n        }\n\n        return response;\n    }\n\n    protected getSetVaultParameter(key: string, promptText: string): string | null {\n        let value: string | null = window.localStorage.getItem(key);\n\n        if (value) {\n            return value;\n        }\n\n        value = prompt(promptText);\n\n        if (!value) {\n            return null;\n        }\n\n        window.localStorage.setItem(key, value);\n\n        return value;\n    }\n\n    protected ensureVaultParameters(): Promise<boolean> {\n        const username = this.getSetVaultParameter(GitHubVaultStorageBase.LOCAL_STORAGE_KEY_USERNAME, 'GitHub account username:');\n        if (!username) {\n            return Promise.resolve(false);\n        }\n        this.username = username;\n\n        const repositoryName: string | null = this.getSetVaultParameter(GitHubVaultStorageBase.LOCAL_STORAGE_KEY_REPO, 'Vault GitHub repository name:');\n        if (!repositoryName) {\n            return Promise.resolve(false);\n        }\n        this.repositoryName = repositoryName;\n\n        const vaultFilename: string | null = this.getSetVaultParameter(GitHubVaultStorageBase.LOCAL_STORAGE_KEY_FILENAME, 'Vault filename:');\n        if (!vaultFilename) {\n            return Promise.resolve(false);\n        }\n        this.vaultFilename = vaultFilename;\n\n        return Promise.resolve(true);\n    }\n\n    protected abstract getToken(): Promise<string | null>;\n\n    private async ensureToken(): Promise<boolean> {\n        let token: string | null = await this.secureLocalStorage.getItem(GitHubVaultStorageBase.AUTH_TOKEN_KEY_NAME);\n\n        if (token === null) {\n            token = await this.getToken();\n        }\n\n        if (!token) {\n            return false;\n        }\n\n        await this.secureLocalStorage.setItem(GitHubVaultStorageBase.AUTH_TOKEN_KEY_NAME, token);\n\n        this.token = token;\n\n        return true;\n    }\n\n    private constructVaultFileUrl() {\n        return `/repos/${this.username}/${this.repositoryName}/contents/${this.vaultFilename}`;\n    }\n\n    public async getVaultContent(): Promise<string | null> {\n        if (await this.ensureVaultParameters() === false) {\n            return null;\n        }\n        if (await this.ensureToken() === false) {\n            return null;\n        }\n\n        const url: string = this.constructVaultFileUrl();\n        const response: Response | null = await this.request(false, 'GET', url, this.constructTokenAuthString());\n\n        if (response === null) {\n            console.warn('Fetching vault content aborted.');\n            return null;\n        }\n\n        if (response.ok === false) {\n            if (response.status === 401) {\n                this.secureLocalStorage.removeItem(GitHubVaultStorageBase.AUTH_TOKEN_KEY_NAME);\n                this.token = null;\n                this.oneTimePassword = null;\n\n                return await this.getVaultContent();\n            }\n\n            console.error(`Failed to fetch vault file '${this.vaultFilename}'.`, response);\n\n            return null;\n        }\n\n        const responseContent: IGitHubContent = await response.json();\n\n        this.currentVaultContentHash = responseContent.sha;\n\n        return atob(responseContent.content);\n    }\n\n    async setVaultContent(newContent: string, updateMessage: string): Promise<boolean> {\n        if (await this.ensureVaultParameters() === false) {\n            return false;\n        }\n        if (await this.ensureToken() === false) {\n            return false;\n        }\n\n        const body = {\n            message: updateMessage,\n            content: btoa(newContent),\n            sha: this.currentVaultContentHash\n        };\n\n        const url: string = this.constructVaultFileUrl();\n        const response: Response | null = await this.request(false, 'PUT', url, this.constructTokenAuthString(), body);\n\n        if (response === null) {\n            console.warn('Push new vault content aborted.');\n            return false;\n        }\n\n        const responseContent: any = await response.json();\n\n        if (response.ok === false) {\n            console.error(`Failed to create/update vault file '${this.vaultFilename}'.`, response, responseContent);\n            return false;\n        }\n\n        this.currentVaultContentHash = (responseContent.content as IGitHubContent).sha;\n\n        return true;\n    };\n}\n\n// ================================================================================================\n\nexport class GitHubPersonalAccessTokenVaultStorage extends GitHubVaultStorageBase {\n    protected getToken(): Promise<string | null> {\n        const authToken: string | null = prompt('Personal access token:');\n        return Promise.resolve(authToken);\n    }\n}\n\n// ================================================================================================\n\nexport class GitHubApiVaultStorage extends GitHubVaultStorageBase {\n    static AUTHORIZATION_NAME: string = 'github.com/TanukiSharp/ItchyPassword';\n\n    static LOCAL_STORAGE_KEY_PASSWORD_PUBLIC: string = 'GitHubApiVaultStorage.PasswordPublicPart';\n    static LOCAL_STORAGE_KEY_PASSWORD_LENGTH: string = 'GitHubApiVaultStorage.PasswordLength';\n    static LOCAL_STORAGE_KEY_BROWSER_NAME: string = 'GitHubApiVaultStorage.BrowserName';\n\n    private basicAuthHeader: string | null = null;\n    private authorizationName: string | null = null;\n\n    public constructor(secureLocalStorage: SecureLocalStorage) {\n        super(secureLocalStorage);\n    }\n\n    public clear(): void {\n        super.clear();\n\n        this.secureLocalStorage.removeItem(GitHubApiVaultStorage.LOCAL_STORAGE_KEY_PASSWORD_PUBLIC);\n        this.secureLocalStorage.removeItem(GitHubApiVaultStorage.LOCAL_STORAGE_KEY_PASSWORD_LENGTH);\n        this.secureLocalStorage.removeItem(GitHubApiVaultStorage.LOCAL_STORAGE_KEY_BROWSER_NAME);\n    }\n\n    private constructBasicAuthString(username: string, password: string): string {\n        console.log('username:', username);\n        console.log('password:', password);\n\n        const authString = btoa(`${username}:${password}`);\n        return `Basic ${authString}`;\n    }\n\n    private async listAuthorizations(): Promise<IAuthorization[] | null> {\n        if (!this.basicAuthHeader) {\n            return null;\n        }\n\n        const response: Response | null = await this.request(true, 'GET', '/authorizations', this.basicAuthHeader);\n\n        if (response === null) {\n            console.warn('List authorizations aborted.');\n            return null;\n        }\n\n        if (response.ok === false) {\n            console.error('Failed to list authorizations.', response);\n            return null;\n        }\n\n        return await response.json();\n    }\n\n    private async deleteAuthorization(authorization: IAuthorization): Promise<boolean> {\n        if (!this.basicAuthHeader) {\n            return false;\n        }\n\n        const response: Response | null = await this.request(true, 'DELETE', `/authorizations/${authorization.id}`, this.basicAuthHeader);\n\n        if (response === null) {\n            console.warn('Delete authorization aborted.');\n            return false;\n        }\n\n        if (response.ok === false) {\n            console.error(`Failed to delete authorization '${authorization.id}'.`, response);\n        }\n\n        return response.ok;\n    }\n\n    private async createAuthorization(): Promise<string | null> {\n        if (!this.authorizationName) {\n            return null;\n        }\n\n        if (!this.basicAuthHeader) {\n            return null;\n        }\n\n        const body: PlainObject = {\n            scopes: ['repo'],\n            note: this.authorizationName\n        };\n\n        const response: Response | null = await this.request(true, 'POST', '/authorizations', this.basicAuthHeader, body);\n\n        if (response === null) {\n            console.warn('Create new authorization aborted.');\n            return null;\n        }\n\n        if (response.ok === false) {\n            console.error('Failed to create new authorization.', response);\n            return null;\n        }\n\n        return (await response.json()).token as string;\n    }\n\n    private findAuthorization(authorizations: IAuthorization[]): IAuthorization | null {\n        if (!this.authorizationName) {\n            return null;\n        }\n\n        for (const authorization of authorizations) {\n            if (authorization.app && authorization.app.name === this.authorizationName) {\n                return authorization;\n            }\n        }\n\n        return null;\n    }\n\n    protected async ensureVaultParameters(): Promise<boolean> {\n        if (await super.ensureVaultParameters() === false) {\n            return false;\n        }\n\n        const username: string | null = this.getUsername();\n        if (!username) {\n            return false;\n        }\n\n        const passwordPublicPart: string | null = this.getSetVaultParameter(GitHubApiVaultStorage.LOCAL_STORAGE_KEY_PASSWORD_PUBLIC, 'GitHub account password public part:');\n        if (!passwordPublicPart) {\n            return false;\n        }\n\n        const passwordLengthString: string | null = this.getSetVaultParameter(GitHubApiVaultStorage.LOCAL_STORAGE_KEY_PASSWORD_LENGTH, 'GitHub account password length:');\n        if (!passwordLengthString) {\n            return false;\n        }\n\n        const passwordLength: number = parseInt(passwordLengthString, 10);\n        if (Number.isSafeInteger(passwordLength) === false || passwordLength <= 0) {\n            return false;\n        }\n\n        let password: string | null = await passwordComponent.generatePasswordString(passwordPublicPart, CancellationToken.none);\n        if (!password) {\n            return false;\n        }\n\n        this.basicAuthHeader = this.constructBasicAuthString(username, password.substr(0, passwordLength));\n\n        const browserName: string | null = this.getSetVaultParameter(GitHubApiVaultStorage.LOCAL_STORAGE_KEY_BROWSER_NAME, 'Current device/browser name:');\n        if (!browserName) {\n            return false;\n        }\n\n        this.authorizationName = `${GitHubApiVaultStorage.AUTHORIZATION_NAME} (${browserName})`;\n\n\n        return true;\n    }\n\n    protected async getToken(): Promise<string | null> {\n        const authorizations: IAuthorization[] | null = await this.listAuthorizations();\n\n        if (authorizations === null) {\n            return null;\n        }\n\n        const authorization: IAuthorization | null = this.findAuthorization(authorizations);\n\n        if (authorization !== null) {\n            if (await this.deleteAuthorization(authorization) === false) {\n                return null;\n            }\n        }\n\n        return await this.createAuthorization();\n    }\n}\n","import { getElementById, setupFeedbackButton } from '../ui';\n\nimport { IComponent } from './IComponent';\nimport { ITabInfo } from '../TabControl';\n\nimport * as storageOutputComponent from './storageOutputComponent';\n\nimport { SecureLocalStorage } from '../storages/SecureLocalStorage';\nimport { IVaultStorage } from '../storages/IVaultStorage';\nimport { GitHubPersonalAccessTokenVaultStorage } from '../storages/GitHubVaultStorage';\nimport { hasPrivatePart } from './privatePartComponent';\n\nconst divTabVault: HTMLInputElement = getElementById('divTabVault');\nconst btnTabVault: HTMLInputElement = getElementById('btnTabVault');\n\nconst txtVault: HTMLInputElement = getElementById('txtVault');\nconst btnRefreshVault: HTMLInputElement = getElementById('btnRefreshVault');\nconst btnClearVaultSettings: HTMLInputElement = getElementById('btnClearVaultSettings');\n\nlet vaultStorage: IVaultStorage = new GitHubPersonalAccessTokenVaultStorage(new SecureLocalStorage());\n\nasync function reloadVault(): Promise<boolean> {\n    const content: string | null = await vaultStorage.getVaultContent();\n    txtVault.value = content || '<error>';\n    return content !== null;\n}\n\nasync function onRefreshVaultButtonClick(): Promise<boolean> {\n    if (hasPrivatePart() === false) {\n        alert('You must enter a master key first.');\n        return false;\n    }\n\n    return await reloadVault();\n}\n\nfunction onClearVaultSettingsButtonClick(): void {\n    if (prompt('Are you sure you want to clear the vault settings ?\\nType \\'y\\' to accept', '') !== 'y') {\n        return;\n    }\n\n    vaultStorage.clear();\n}\n\nexport class VaultComponent implements IComponent, ITabInfo {\n    getTabButton(): HTMLInputElement {\n        return btnTabVault;\n    }\n    getTabContent(): HTMLInputElement {\n        return divTabVault;\n    }\n    onTabSelected(): void {\n        storageOutputComponent.hide();\n    }\n\n    init(): void {\n        setupFeedbackButton(btnRefreshVault, onRefreshVaultButtonClick);\n        btnClearVaultSettings.addEventListener('click', onClearVaultSettingsButtonClick);\n    }\n}\n","import * as cipherComponent from '../components/cipherComponent';\nimport { CancellationToken } from '../asyncUtils';\n\nexport interface IAsyncStorage {\n    readonly length: number;\n    clear(): void;\n    getItem(key: string): Promise<string | null>;\n    key(index: number): string | null;\n    removeItem(key: string): void;\n    setItem(key: string, value: string): Promise<void>;\n}\n\nexport class SecureLocalStorage implements IAsyncStorage {\n    get length(): number {\n        return window.localStorage.length;\n    }\n\n    clear(): void {\n        window.localStorage.clear();\n    }\n\n    key(index: number): string | null {\n        return window.localStorage.key(index);\n    }\n\n    removeItem(key: string): void {\n        window.localStorage.removeItem(key);\n    }\n\n    async getItem(key: string): Promise<string | null> {\n        const encryptedItem: string | null = window.localStorage.getItem(key);\n\n        if (encryptedItem === null) {\n            return null;\n        }\n\n        return await cipherComponent.decryptString(encryptedItem, CancellationToken.none);\n    }\n\n    async setItem(key: string, value: string): Promise<void> {\n        const encrypted: string | null = await cipherComponent.encryptString(value, CancellationToken.none);\n\n        if (encrypted === null) {\n            console.error('Failed to encrypt value. (nothing stored)');\n            return;\n        }\n\n        window.localStorage.setItem(key, encrypted);\n    }\n}\n","import { getElementById } from './ui';\nimport { TabControl, ITabInfo } from './TabControl';\nimport { IComponent } from './components/IComponent';\n\nimport { PrivatePartComponent } from './components/privatePartComponent';\nimport { PasswordComponent } from './components/passwordComponent';\nimport { CipherComponent } from './components/cipherComponent';\nimport { ReEncryptComponent } from './components/reEncryptComponent';\nimport { VaultComponent } from './components/vaultComponent';\n\nimport * as storageOutputComponent from './components/storageOutputComponent';\n\nconst nothingTabInfo: ITabInfo = {\n    getTabButton(): HTMLInputElement {\n        return getElementById('btnTabNothing');\n    },\n    getTabContent(): HTMLInputElement {\n        return getElementById('divTabNothing');\n    },\n    onTabSelected(): void {\n        storageOutputComponent.hide();\n    }\n}\n\nconst elements: any[] = [\n    nothingTabInfo,\n    new PrivatePartComponent(),\n    new PasswordComponent(),\n    new CipherComponent(),\n    new ReEncryptComponent(),\n    new storageOutputComponent.StorageOutputComponent(),\n    new VaultComponent(),\n];\n\nconst tabs: ITabInfo[] = elements.filter(e => (e as ITabInfo).getTabButton !== undefined);\nconst components: IComponent[] = elements.filter(e => (e as IComponent).init !== undefined);\n\nnew TabControl(tabs);\n\ndeclare const COMMITHASH: string;\n\nconst version = COMMITHASH.substr(0, 11);\nconst githubLink = '<a href=\"https://github.com/TanukiSharp/ItchyPassword\" target=\"_blank\">github</a>';\n\ngetElementById('divInfo').innerHTML = `${version}<br/>${githubLink}`;\n\nlet component: IComponent;\nfor (component of components) {\n    component.init();\n}\n","export interface ITabInfo {\n    getTabButton(): HTMLInputElement;\n    getTabContent(): HTMLInputElement;\n    onTabSelected: Function;\n}\n\nexport class TabControl {\n    private _activeTabIndex: number = -1;\n\n    public get activeTabIndex(): number {\n        return this._activeTabIndex;\n    }\n    public set activeTabIndex(index: number) {\n        if (index < 0 || index >= this.tabs.length) {\n            throw new Error(`Argument 'index' out of range. Must be in range [0;${this.tabs.length - 1}].`);\n        }\n        this.setActiveTab(index);\n    }\n\n    public constructor(private tabs: ITabInfo[]) {\n        for (let i = 0; i < this.tabs.length; i += 1) {\n            tabs[i].getTabButton().addEventListener('click', () => {\n                this.setActiveTab(i);\n            });\n        }\n\n        this.setActiveTab(0);\n    }\n\n    private setActiveTab(activeTabIndex: number) {\n        if (activeTabIndex === this._activeTabIndex) {\n            return;\n        }\n\n        let tabInfo: ITabInfo;\n\n        for (tabInfo of this.tabs) {\n            const button = tabInfo.getTabButton();\n            button.style.removeProperty('font-weight');\n            button.style.setProperty('color', '#C0C0C0');\n\n            tabInfo.getTabContent().style.setProperty('display', 'none');\n        }\n\n        const button = this.tabs[activeTabIndex].getTabButton();\n        button.style.setProperty('font-weight', 'bold');\n        button.style.removeProperty('color');\n\n        this.tabs[activeTabIndex].getTabContent().style.removeProperty('display');\n\n        this._activeTabIndex = activeTabIndex;\n\n        this.tabs[activeTabIndex].onTabSelected();\n    }\n}\n"],"sourceRoot":""}