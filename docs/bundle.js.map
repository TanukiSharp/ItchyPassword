{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/TabControl.ts","webpack:///./src/TimedAction.ts","webpack:///./src/VisualFeedback.ts","webpack:///./src/arrayUtils.ts","webpack:///./src/ciphers/v1.ts","webpack:///./src/ciphers/v2.ts","webpack:///./src/components/cipherComponent.ts","webpack:///./src/components/passwordComponent.ts","webpack:///./src/components/privatePartComponent.ts","webpack:///./src/components/reEncryptComponent.ts","webpack:///./src/components/storageOutputComponent.ts","webpack:///./src/crypto.ts","webpack:///./src/index.ts","webpack:///./src/passwordGenerators/v1.ts","webpack:///./src/stringUtils.ts","webpack:///./src/ui.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export interface ITabInfo {\n    getTabButton(): HTMLInputElement;\n    getTabContent(): HTMLInputElement;\n    onTabSelected: Function;\n}\n\nexport class TabControl {\n    private _activeTabIndex: number = -1;\n\n    public get activeTabIndex(): number {\n        return this._activeTabIndex;\n    }\n    public set activeTabIndex(index: number) {\n        if (index < 0 || index >= this.tabs.length) {\n            throw new Error(`Argument 'index' out of range. Must be in range [0;${this.tabs.length - 1}].`);\n        }\n        this.setActiveTab(index);\n    }\n\n    public constructor(private tabs: ITabInfo[]) {\n        for (let i = 0; i < this.tabs.length; i += 1) {\n            tabs[i].getTabButton().addEventListener('click', () => {\n                this.setActiveTab(i);\n            });\n        }\n\n        this.setActiveTab(0);\n    }\n\n    private setActiveTab(activeTabIndex: number) {\n        if (activeTabIndex === this._activeTabIndex) {\n            return;\n        }\n\n        let tabInfo: ITabInfo;\n\n        for (tabInfo of this.tabs) {\n            const button = tabInfo.getTabButton();\n            button.style.removeProperty('font-weight');\n            button.style.setProperty('color', '#C0C0C0');\n\n            tabInfo.getTabContent().style.setProperty('display', 'none');\n        }\n\n        const button = this.tabs[activeTabIndex].getTabButton();\n        button.style.setProperty('font-weight', 'bold');\n        button.style.removeProperty('color');\n\n        this.tabs[activeTabIndex].getTabContent().style.removeProperty('display');\n\n        this._activeTabIndex = activeTabIndex;\n\n        this.tabs[activeTabIndex].onTabSelected();\n    }\n}\n","export class TimedAction {\n    private timeout: number | undefined;\n    public constructor(private action: Function, private delay: number) {\n    }\n\n    public reset(overrideDelay: number | undefined = undefined): void {\n        if (this.timeout !== undefined) {\n            clearTimeout(this.timeout);\n        }\n\n        const delay = overrideDelay !== undefined ? overrideDelay : this.delay;\n\n        this.timeout = setTimeout(() => {\n            this.action();\n            this.timeout = undefined;\n        }, delay);\n    }\n}\n","export class VisualFeedback {\n    private element: HTMLElement;\n    private timeout: number | undefined;\n\n    public constructor(element: HTMLElement) {\n        this.element = element;\n    }\n\n    public setText(text: string, duration: number) {\n        this.element.innerHTML = text;\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n        this.timeout = setTimeout(() => this.element.innerHTML = '', duration);\n    }\n}\n","export function arrayToString(array: ArrayBuffer): string {\n    const decoder = new TextDecoder(/*'utf-8'*/);\n    return decoder.decode(array);\n};\n\nexport function copy(source: Uint8Array, sourceIndex: number, target: Uint8Array, targetIndex: number, length: number): void {\n    for (let i: number = 0; i < length; i += 1) {\n        target[i + targetIndex] = source[i + sourceIndex];\n    }\n}\n\nfunction createHeaderedBuffer(buffer: ArrayBuffer): ArrayBuffer {\n    if (buffer.byteLength > 0xFFFF) {\n        throw new Error(`Buffer too large: ${buffer.byteLength} bytes`);\n    }\n\n    let length = buffer.byteLength;\n    const headeredBuffer: Uint8Array = new Uint8Array(2 + buffer.byteLength);\n\n    for (let i: number = 0; i < 2; i += 1) {\n        headeredBuffer[i] = length % 256;\n        length /= 256;\n    }\n\n    headeredBuffer.set(new Uint8Array(buffer), 2);\n\n    return headeredBuffer.buffer;\n}\n\nfunction arrayBufferToUnsignedBigIntWithoutHeader(arrayBuffer: ArrayBuffer): bigint {\n    const length: number = arrayBuffer.byteLength;\n    const arrayView: DataView = new DataView(arrayBuffer, 0);\n\n    let result: bigint = 0n;\n    let multiplier: bigint = 1n;\n\n    for (let i: number = 0; i < length; i += 1) {\n        result += BigInt(arrayView.getUint8(i)) * multiplier;\n        multiplier *= 256n;\n    }\n\n    return result;\n}\n\nfunction arrayBufferToUnsignedBigInt(arrayBuffer: ArrayBuffer): bigint {\n    arrayBuffer = createHeaderedBuffer(arrayBuffer);\n\n    const length: number = arrayBuffer.byteLength;\n    const arrayView: DataView = new DataView(arrayBuffer, 0);\n\n    let result: bigint = 0n;\n    let multiplier: bigint = 1n;\n\n    for (let i: number = 0; i < length; i += 1) {\n        result += BigInt(arrayView.getUint8(i)) * multiplier;\n        multiplier *= 256n;\n    }\n\n    return result;\n}\n\nexport function unsignedBigIntToArrayBuffer(number: bigint): ArrayBuffer {\n    const result: Array<number> = [];\n\n    while (number > 0n)\n    {\n        const remainder: bigint = number % 256n;\n        number /= 256n;\n\n        const byteValue: number = Number(<any>BigInt.asUintN(8, remainder));\n\n        result.push(byteValue);\n    }\n\n    let totalLength: number = result[0];\n    if (result.length > 1) { // For case where original buffer is of length 1 and contains 0.\n        totalLength += result[1] * 256;\n    }\n\n    // The varable 'result' contains 2 bytes of size header.\n    const diff = totalLength - (result.length - 2);\n\n    for (let i: number = 0; i < diff; i += 1) {\n        result.push(0);\n    }\n\n    return new Uint8Array(result.slice(2)).buffer;\n}\n\n// This is a one way encoding in the sense that decoding is not always deterministic.\n// This can be used to generate strings where decoding it doesn't matter.\nexport function toCustomBaseOneWay(bytes: ArrayBuffer, alphabet: string): string {\n    const alphabetLength: bigint = BigInt(alphabet.length);\n\n    let result: string = '';\n    let number: bigint = arrayBufferToUnsignedBigIntWithoutHeader(bytes);\n\n    while (number > 0n)\n    {\n        const remainder: bigint = number % alphabetLength;\n        number /= alphabetLength;\n\n        const index: number = <number><any>BigInt.asUintN(8, remainder);\n\n        result += alphabet[index];\n    }\n\n    return result;\n}\n\nexport function toCustomBase(bytes: ArrayBuffer, alphabet: string): string {\n    const alphabetLength: bigint = BigInt(alphabet.length);\n\n    let result: string = '';\n    let number: bigint = arrayBufferToUnsignedBigInt(bytes);\n\n    while (number > 0n)\n    {\n        const remainder: bigint = number % alphabetLength;\n        number /= alphabetLength;\n\n        const index: number = <number><any>BigInt.asUintN(8, remainder);\n\n        result += alphabet[index];\n    }\n\n    return result;\n}\n\nexport function fromCustomBase(input: string, alphabet: string): ArrayBuffer {\n    const alphabetLength: bigint = BigInt(alphabet.length);\n\n    let number: bigint = 0n;\n    let multiplier: bigint = 1n;\n\n    for (let i: number = 0; i < input.length; i += 1) {\n        const value: bigint = BigInt(alphabet.indexOf(input[i]));\n\n        number += value * multiplier;\n        multiplier *= alphabetLength;\n    }\n\n    return unsignedBigIntToArrayBuffer(number);\n}\n\nexport function toBase16(buffer: ArrayBuffer): string {\n    return Array.prototype.map.call(\n        new Uint8Array(buffer),\n        x => ('00' + x.toString(16)).slice(-2)\n    ).join('');\n}\n","import { ICipher, getDerivedBytes } from '../crypto';\n\nconst encryptionKeyDerivationSalt: ArrayBuffer = new Uint8Array([ 0xf2, 0xcf, 0xef, 0x8e, 0x13, 0x40, 0x46, 0x49, 0x92, 0x2a, 0xde, 0x5c, 0xbc, 0x88, 0x38, 0xa8 ]).buffer;\n\nexport class CipherV1 implements ICipher {\n    public get version(): number {\n        return 1;\n    }\n\n    public get description(): string {\n        return 'PBKDF2 + AES-GCM';\n    }\n\n    async encrypt(input: ArrayBuffer, password: ArrayBuffer): Promise<ArrayBuffer> {\n        const output: ArrayBuffer = new ArrayBuffer(12 + 16 + input.byteLength);\n\n        const nonce: DataView = new DataView(output, 0, 12);\n        crypto.getRandomValues(new Uint8Array(output, 0, 12));\n\n        const aesGcmParams: AesGcmParams = {\n            name: 'AES-GCM',\n            iv: nonce\n        };\n\n        const aesKeyAlgorithm: AesKeyAlgorithm = {\n            name: 'AES-GCM',\n            length: 256\n        };\n\n        const passwordKey: CryptoKey = await crypto.subtle.importKey(\n            'raw',\n            await getDerivedBytes(password, encryptionKeyDerivationSalt),\n            aesKeyAlgorithm,\n            false,\n            ['encrypt']\n        );\n\n        const result: ArrayBuffer = await crypto.subtle.encrypt(aesGcmParams, passwordKey, input);\n\n        new Uint8Array(output).set(new Uint8Array(result), 12);\n\n        return output;\n    }\n\n    async decrypt(input: ArrayBuffer, password: ArrayBuffer): Promise<ArrayBuffer> {\n        const nonce: DataView = new DataView(input, 0, 12);\n        const payload: DataView = new DataView(input, 12);\n\n        const aesGcmParams: AesGcmParams = {\n            name: 'AES-GCM',\n            iv: nonce\n        };\n\n        const aesKeyAlgorithm: AesKeyAlgorithm = {\n            name: 'AES-GCM',\n            length: 256\n        };\n\n        const derivedKey: ArrayBuffer = await getDerivedBytes(password, encryptionKeyDerivationSalt);\n\n        const passwordKey: CryptoKey = await crypto.subtle.importKey(\n            'raw',\n            derivedKey,\n            aesKeyAlgorithm,\n            false,\n            ['decrypt']\n        );\n\n        return await crypto.subtle.decrypt(aesGcmParams, passwordKey, payload);\n    }\n}\n","import { ICipher, getDerivedBytes } from '../crypto';\n\nexport class CipherV2 implements ICipher {\n    public get version(): number {\n        return 2;\n    }\n\n    public get description(): string {\n        return 'PBKDF2 + AES-GCM';\n    }\n\n    async encrypt(input: ArrayBuffer, password: ArrayBuffer): Promise<ArrayBuffer> {\n        const output: ArrayBuffer = new ArrayBuffer(12 + 16 + 16 + input.byteLength);\n\n        const nonce: Uint8Array = crypto.getRandomValues(new Uint8Array(output, 0, 12));\n        const passwordSalt: Uint8Array = crypto.getRandomValues(new Uint8Array(output, 12, 16));\n\n        const aesGcmParams: AesGcmParams = {\n            name: 'AES-GCM',\n            iv: nonce\n        };\n\n        const aesKeyAlgorithm: AesKeyAlgorithm = {\n            name: 'AES-GCM',\n            length: 256\n        };\n\n        const passwordKey: CryptoKey = await crypto.subtle.importKey(\n            'raw',\n            await getDerivedBytes(password, passwordSalt),\n            aesKeyAlgorithm,\n            false,\n            ['encrypt']\n        );\n\n        const result: ArrayBuffer = await crypto.subtle.encrypt(aesGcmParams, passwordKey, input);\n\n        new Uint8Array(output).set(new Uint8Array(result), 12 + 16);\n\n        return output;\n    }\n\n    async decrypt(input: ArrayBuffer, password: ArrayBuffer): Promise<ArrayBuffer> {\n        const nonce: Uint8Array = new Uint8Array(input, 0, 12);\n        const passwordSalt: Uint8Array = new Uint8Array(input, 12, 16);\n        const payload: Uint8Array = new Uint8Array(input, 12 + 16);\n\n        const aesGcmParams: AesGcmParams = {\n            name: 'AES-GCM',\n            iv: nonce\n        };\n\n        const aesKeyAlgorithm: AesKeyAlgorithm = {\n            name: 'AES-GCM',\n            length: 256\n        };\n\n        const derivedKey: ArrayBuffer = await getDerivedBytes(password, passwordSalt);\n\n        const passwordKey: CryptoKey = await crypto.subtle.importKey(\n            'raw',\n            derivedKey,\n            aesKeyAlgorithm,\n            false,\n            ['decrypt']\n        );\n\n        return await crypto.subtle.decrypt(aesGcmParams, passwordKey, payload);\n    }\n}\n","import * as crypto from '../crypto';\nimport * as stringUtils from '../stringUtils';\nimport * as arrayUtils from '../arrayUtils';\n\nimport { getElementById, setupCopyButton, ERROR_COLOR } from '../ui';\nimport { getPrivatePart } from './privatePartComponent';\n\nimport { CipherV2 } from '../ciphers/v2';\nimport { ITabInfo } from '../TabControl';\nimport { IComponent } from './IComponent';\n\nimport * as storageOutputComponent from './storageOutputComponent';\n\nconst RESERVED_KEYS: string[] = ['version', 'value'];\n\nconst btnTabCiphers: HTMLInputElement = getElementById('btnTabCiphers');\nconst divTabCiphers: HTMLInputElement = getElementById('divTabCiphers');\n\nconst cipher: crypto.ICipher = new CipherV2();\n\nconst txtCipherName: HTMLInputElement = getElementById('txtCipherName');\nconst txtCipherSource: HTMLInputElement = getElementById('txtCipherSource');\nconst txtCipherTarget: HTMLInputElement = getElementById('txtCipherTarget');\nconst btnEncrypt: HTMLInputElement = getElementById('btnEncrypt');\nconst btnDecrypt: HTMLInputElement = getElementById('btnDecrypt');\n\nconst btnClearCipherSource: HTMLInputElement = getElementById('btnClearCipherSource');\nconst spnCopyCipherTargetFeedback: HTMLInputElement = getElementById('spnCopyCipherTargetFeedback');\nconst btnCopyCipherTarget: HTMLInputElement = getElementById('btnCopyCipherTarget');\nconst btnClearCipherTarget: HTMLInputElement = getElementById('btnClearCipherTarget');\n\nfunction clearSourceVisualCue(): void {\n    txtCipherSource.style.removeProperty('background-color');\n}\n\nfunction clearTargetVisualCue(): void {\n    txtCipherTarget.style.removeProperty('background-color');\n}\n\nfunction setSourceVisualCueError() {\n    txtCipherSource.style.setProperty('background-color', ERROR_COLOR);\n}\n\nfunction setTargetVisualCueError() {\n    txtCipherTarget.style.setProperty('background-color', ERROR_COLOR);\n}\n\nfunction clearAllVisualCues(): void {\n    clearSourceVisualCue();\n    clearTargetVisualCue();\n}\n\nfunction setCipherTargetValue(value: string): void {\n    txtCipherTarget.value = value;\n    onCipherTargetChanged();\n}\n\nfunction onCipherTargetChanged(): void {\n    updateCipherParameters();\n}\n\nfunction updateCipherParameters(): void {\n    if (txtCipherTarget.value === '' || txtCipherName.value === '') {\n        storageOutputComponent.clearOutputs();\n        return;\n    }\n\n    const cipherParameters = {\n        version: cipher.version,\n        value: txtCipherTarget.value\n    }\n\n    const path = `ciphers/${txtCipherName.value}`;\n\n    storageOutputComponent.setParameters(cipherParameters, path, RESERVED_KEYS);\n}\n\nasync function onEncryptButtonClick(): Promise<void> {\n    txtCipherSource.focus();\n    setCipherTargetValue('');\n    clearAllVisualCues();\n\n    if (txtCipherSource.value.length === 0) {\n        setSourceVisualCueError();\n        return;\n    }\n\n    const privatePart: string = getPrivatePart();\n    if (privatePart.length === 0) {\n        console.warn('Private part is empty');\n        return;\n    }\n\n    const input: ArrayBuffer = stringUtils.stringToArray(txtCipherSource.value);\n    const password: ArrayBuffer = stringUtils.stringToArray(privatePart);\n\n    const encrypted: ArrayBuffer = await cipher.encrypt(input, password);\n\n    setCipherTargetValue(arrayUtils.toCustomBase(encrypted, crypto.BASE62_ALPHABET));\n}\n\nasync function onDecryptButtonClick(): Promise<void> {\n    txtCipherSource.focus();\n    setCipherTargetValue('');\n    clearAllVisualCues();\n\n    if (txtCipherSource.value.length === 0) {\n        setSourceVisualCueError();\n        return;\n    }\n\n    const privatePart: string = getPrivatePart();\n    if (privatePart.length === 0) {\n        console.warn('Private part is empty');\n        return;\n    }\n\n    try {\n        const input: ArrayBuffer = arrayUtils.fromCustomBase(txtCipherSource.value, crypto.BASE62_ALPHABET);\n        const password: ArrayBuffer = stringUtils.stringToArray(privatePart);\n\n        const decrypted: ArrayBuffer = await cipher.decrypt(input, password);\n\n        setCipherTargetValue(arrayUtils.arrayToString(decrypted));\n    } catch (error) {\n        console.warn(`Failed to decrypt${error.message ? `, error: ${error.message}` : ', no error message'}`);\n        setTargetVisualCueError();\n    }\n}\n\nexport class CipherComponent implements IComponent, ITabInfo {\n    getTabButton(): HTMLInputElement {\n        return btnTabCiphers;\n    }\n    getTabContent(): HTMLInputElement {\n        return divTabCiphers;\n    }\n    onTabSelected(): void {\n        storageOutputComponent.show();\n        updateCipherParameters();\n    }\n\n    init(): void {\n        setupCopyButton(txtCipherTarget, btnCopyCipherTarget, spnCopyCipherTargetFeedback);\n\n        btnEncrypt.addEventListener('click', onEncryptButtonClick);\n        btnDecrypt.addEventListener('click', onDecryptButtonClick);\n\n        txtCipherName.addEventListener('input', () => {\n            updateCipherParameters();\n        });\n\n        txtCipherSource.addEventListener('input', () => {\n            if (txtCipherSource.value.length > 0) {\n                clearSourceVisualCue();\n            }\n        });\n\n        btnClearCipherSource.addEventListener('click', () => {\n            txtCipherSource.value = '';\n        });\n\n        btnClearCipherTarget.addEventListener('click', () => {\n            setCipherTargetValue('');\n        });\n    }\n}\n","import { getElementById, setupCopyButton, ERROR_COLOR } from '../ui';\nimport * as privatePart from './privatePartComponent';\n\nimport * as crypto from '../crypto';\nimport * as stringUtils from '../stringUtils';\nimport * as arrayUtils from '../arrayUtils';\n\nimport { PlainObject } from '../PlainObject';\nimport { PasswordGeneratorV1 } from '../passwordGenerators/v1';\nimport { ITabInfo } from '../TabControl';\nimport { IComponent } from './IComponent';\n\nimport * as storageOutputComponent from './storageOutputComponent';\n\nconst btnTabPasswords: HTMLInputElement = getElementById('btnTabPasswords');\nconst divTabPasswords: HTMLInputElement = getElementById('divTabPasswords');\n\nconst passwordGenerator: crypto.IPasswordGenerator = new PasswordGeneratorV1('Password');\n\nconst txtPublicPart: HTMLInputElement = getElementById('txtPublicPart');\nconst btnGeneratePublicPart: HTMLInputElement = getElementById('btnGeneratePublicPart');\nconst btnClearPublicPart: HTMLInputElement = getElementById('btnClearPublicPart');\nconst btnCopyPublicPart: HTMLInputElement = getElementById('btnCopyPublicPart');\nconst spnCopyPublicPartFeedback: HTMLInputElement = getElementById('spnCopyPublicPartFeedback');\n\nconst numOutputSizeRange: HTMLInputElement = getElementById('numOutputSizeRange');\nconst numOutputSizeNum: HTMLInputElement = getElementById('numOutputSizeNum');\n\nconst txtAlphabet: HTMLInputElement = getElementById('txtAlphabet');\nconst spnAlphabetSize: HTMLInputElement = getElementById('spnAlphabetSize');\nconst btnResetAlphabet: HTMLInputElement = getElementById('btnResetAlphabet');\n\nconst txtResultPassword: HTMLInputElement = getElementById('txtResultPassword');\nconst spnResultPasswordLength: HTMLInputElement = getElementById('spnResultPasswordLength');\nconst btnCopyResultPassword: HTMLInputElement = getElementById('btnCopyResultPassword');\nconst spnCopyResultPasswordFeedback: HTMLInputElement = getElementById('spnCopyResultPasswordFeedback');\n\nconst DEFAULT_LENGTH: number = 64;\nconst DEFAULT_ALPHABET: string = '!\"#$%&\\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~';\n\nconst RESERVED_KEYS: string[] = ['alphabet', 'length', 'public', 'datetime'];\n\nlet passwordPublicPartLastChange: string | undefined;\n\nfunction onClearPublicPartButtonClick(): void {\n    if (txtPublicPart.value.length > 0) {\n        if (prompt('Are you sure you want to clear the public part ?\\nType \\'y\\' to accept', '') !== 'y') {\n            return;\n        }\n    }\n\n    txtPublicPart.value = '';\n\n    updatePasswordPublicPartLastUpdate();\n    updatePasswordGenerationParameters();\n}\n\nfunction onGeneratePublicPartButtonClick(): void {\n    if (txtPublicPart.value.length > 0) {\n        if (prompt('Are you sure you want to generate a new public part ?\\nType \\'y\\' to accept', '') !== 'y') {\n            return;\n        }\n    }\n\n    const randomString: string = crypto.generateRandomString();\n    txtPublicPart.value = randomString;\n\n    updatePasswordPublicPartLastUpdate();\n\n    run();\n}\n\nfunction updatePasswordPublicPartLastUpdate(): void {\n    if (txtPublicPart.value.length > 0) {\n        passwordPublicPartLastChange = new Date().toISOString();\n    } else {\n        passwordPublicPartLastChange = undefined;\n    }\n}\n\nfunction deepMerge(source: PlainObject, target: PlainObject): void {\n    for (const sourceKey of Object.keys(source)) {\n        const targetValue: any = target[sourceKey];\n        const sourceValue: any = source[sourceKey];\n\n        if (targetValue === undefined ||\n            targetValue === null ||\n            targetValue.constructor.name !== 'Object' ||\n            sourceValue.constructor.name !== 'Object') {\n            target[sourceKey] = sourceValue;\n            continue;\n        }\n\n        deepMerge(sourceValue, targetValue);\n    }\n}\n\nfunction setupViewButton(txt: HTMLInputElement, buttonName: string): void {\n    const btn: HTMLInputElement = getElementById(buttonName);\n    btn.addEventListener('click', () => {\n        if (txt.type === 'password') {\n            txt.type = 'input';\n            btn.innerHTML = 'Hide';\n        } else {\n            txt.type = 'password';\n            btn.innerHTML = 'View';\n        }\n    });\n}\n\nfunction updateResultPasswordLength() {\n    spnResultPasswordLength.innerHTML = txtResultPassword.value.length.toString().padStart(2, ' ');\n}\n\nfunction isAlphabetValid(alphabet: string): boolean {\n    const sortedAlphabet: string[] = alphabet.split('');\n    sortedAlphabet.sort();\n\n    for (let i: number = 1; i < sortedAlphabet.length; i += 1) {\n        if (sortedAlphabet[i - 1] === sortedAlphabet[i]) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction updatePasswordGenerationParameters(): void {\n    if (canRun() === false) {\n        clearOutputs();\n        return;\n    }\n\n    const passwordParamters: PlainObject = {\n        public: txtPublicPart.value,\n        datetime: passwordPublicPartLastChange\n    };\n\n    const numericValue: number = txtResultPassword.value.length;\n    if (numericValue !== DEFAULT_LENGTH) {\n        passwordParamters.length = numericValue;\n    }\n\n    const alphabet: string = txtAlphabet.value;\n    if (alphabet !== DEFAULT_ALPHABET) {\n        passwordParamters.alphabet = alphabet;\n    }\n\n    storageOutputComponent.setParameters(passwordParamters, 'password', RESERVED_KEYS);\n}\n\nfunction updateOutputSizeRangeToNum(): void {\n    numOutputSizeNum.value = numOutputSizeRange.value;\n}\n\nfunction updateOutputSizeNumToRange(): boolean {\n    const min: number = parseInt(numOutputSizeRange.min, 10);\n    const val: number = parseInt(numOutputSizeNum.value, 10);\n    const max: number = parseInt(numOutputSizeRange.max, 10);\n\n    if (isNaN(val) === false) {\n        numOutputSizeRange.value = Math.max(min, Math.min(val, max)).toString();\n        return true;\n    }\n\n    return false;\n}\n\nasync function onOutputSizeRangeInput(): Promise<void> {\n    updateOutputSizeRangeToNum();\n    await run();\n}\n\nasync function onOutputSizeNumInput(): Promise<void> {\n    if (updateOutputSizeNumToRange()) {\n        updateOutputSizeRangeToNum();\n    }\n    await run();\n}\n\nfunction updateAlphabetSize(): void {\n    spnAlphabetSize.innerHTML = txtAlphabet.value.length.toString();\n\n    const alphabetSizeDigitCount: number = txtAlphabet.value.length.toString().length;\n    if (alphabetSizeDigitCount < 2) {\n        // Add a space to keep a nice visual alignment.\n        spnAlphabetSize.innerHTML = spnAlphabetSize.innerHTML.padStart(2, ' ');\n    }\n}\n\nfunction updateAlphabetValidityDisplay(isAlphabetValid: boolean): void {\n    if (isAlphabetValid) {\n        txtAlphabet.style.removeProperty('background');\n    } else {\n        txtAlphabet.style.setProperty('background', ERROR_COLOR);\n    }\n}\n\nasync function onAlphabetTextInput(): Promise<void> {\n    const isAlphabetValidResult: boolean = isAlphabetValid(txtAlphabet.value);\n\n    updateAlphabetValidityDisplay(isAlphabetValidResult);\n\n    if (isAlphabetValidResult === false) {\n        return;\n    }\n\n    updateAlphabetSize();\n    await run();\n}\n\nasync function onResetAlphabetButtonClick(): Promise<void> {\n    resetAlphabet();\n    updateAlphabetSize();\n    await run();\n}\n\nfunction clearOutputs(): void {\n    txtResultPassword.value = '';\n    storageOutputComponent.clearOutputs();\n    updateResultPasswordLength();\n}\n\nfunction canRun(): boolean {\n    const alphabet: string = txtAlphabet.value;\n\n    if (isAlphabetValid(alphabet) === false) {\n        return false;\n    }\n\n    if (privatePart.getPrivatePart().length <= 0 || txtPublicPart.value.length < 8 || alphabet.length < 2) {\n        return false;\n    }\n\n    return true;\n}\n\nasync function run() {\n    if (canRun() === false) {\n        clearOutputs();\n        return;\n    }\n\n    const privatePartString: string = privatePart.getPrivatePart();\n    const publicPartString = txtPublicPart.value;\n\n    const privatePrivateBytes: ArrayBuffer = stringUtils.stringToArray(privatePartString);\n    const publicPartBytes: ArrayBuffer = stringUtils.stringToArray(publicPartString);\n\n    const keyBytes: ArrayBuffer = await passwordGenerator.generatePassword(privatePrivateBytes, publicPartBytes);\n\n    const keyString: string = arrayUtils.toCustomBaseOneWay(keyBytes, txtAlphabet.value);\n    txtResultPassword.value = stringUtils.truncate(keyString, Math.max(4, parseInt(numOutputSizeRange.value, 10)));\n\n    updateResultPasswordLength();\n\n    updatePasswordGenerationParameters();\n}\n\nasync function resetAlphabet() {\n    txtAlphabet.value = DEFAULT_ALPHABET;\n    updateAlphabetSize();\n\n    const isAlphabetValidResult: boolean = isAlphabetValid(txtAlphabet.value);\n\n    updateAlphabetValidityDisplay(isAlphabetValidResult);\n\n    if (isAlphabetValidResult) {\n        await run();\n    }\n}\n\nasync function onPublicPartTextInput(): Promise<void> {\n    updatePasswordPublicPartLastUpdate();\n    await run();\n}\n\nexport class PasswordComponent implements IComponent, ITabInfo {\n    getTabButton(): HTMLInputElement {\n        return btnTabPasswords;\n    }\n    getTabContent(): HTMLInputElement {\n        return divTabPasswords;\n    }\n    onTabSelected(): void {\n        storageOutputComponent.show();\n        updatePasswordGenerationParameters();\n    }\n\n    init(): void {\n        privatePart.registerOnChanged(run);\n\n        // dafuq!?\n        numOutputSizeRange.max = DEFAULT_LENGTH.toString();\n        numOutputSizeRange.value = DEFAULT_LENGTH.toString();\n\n        btnClearPublicPart.addEventListener('click', onClearPublicPartButtonClick);\n        btnGeneratePublicPart.addEventListener('click', onGeneratePublicPartButtonClick);\n\n        setupViewButton(txtResultPassword, 'btnViewResultPassword');\n\n        setupCopyButton(txtPublicPart, btnCopyPublicPart, spnCopyPublicPartFeedback);\n        setupCopyButton(txtResultPassword, btnCopyResultPassword, spnCopyResultPasswordFeedback);\n\n        numOutputSizeRange.addEventListener('input', onOutputSizeRangeInput);\n        numOutputSizeNum.addEventListener('input', onOutputSizeNumInput);\n\n        txtAlphabet.addEventListener('input', onAlphabetTextInput);\n        btnResetAlphabet.addEventListener('click', onResetAlphabetButtonClick);\n\n        txtPublicPart.addEventListener('input', onPublicPartTextInput);\n\n        updateOutputSizeRangeToNum();\n        resetAlphabet();\n    }\n};\n","import { getElementById, SUCCESS_COLOR, ERROR_COLOR } from '../ui';\n\nimport { TimedAction } from '../TimedAction';\nimport { IComponent } from './IComponent';\n\nconst btnProtectTitleForProtect = 'Stores the string in memory and removes it from the UI component. Prevents a physical intruder from copy/pasting the value.';\nconst btnProtectTitleForClear = 'Removes the string form memory and re-enables the UI component.';\n\nconst txtPrivatePart: HTMLInputElement = getElementById('txtPrivatePart');\nconst txtPrivatePartConfirmation: HTMLInputElement = getElementById('txtPrivatePartConfirmation');\nconst btnProtect: HTMLInputElement = getElementById('btnProtect');\nconst spnProtectedConfirmation: HTMLInputElement = getElementById('spnProtectedConfirmation');\n\nconst spnPrivatePartSize: HTMLInputElement = getElementById('spnPrivatePartSize');\nconst spnPrivatePartSizeConfirmation: HTMLInputElement = getElementById('spnPrivatePartSizeConfirmation');\n\nconst PRIVATE_PART_PROTECTION_TIMEOUT: number = 60 * 1000;\n\nlet privatePart: string | undefined;\n\nconst onChangedHandlers: (() => void)[] = [];\n\nexport function registerOnChanged(onChanged: () => void) {\n    onChangedHandlers.push(onChanged);\n}\n\nexport function getPrivatePart(): string {\n    if (privatePart !== undefined) {\n        return privatePart;\n    }\n    return txtPrivatePart.value;\n}\n\nfunction protectAndLockPrivatePart(): void {\n    if (txtPrivatePart.value.length === 0) {\n        return;\n    }\n\n    privatePart = txtPrivatePart.value;\n    spnProtectedConfirmation.innerHTML = 'Protected';\n\n    txtPrivatePart.value = '';\n    txtPrivatePartConfirmation.value = '';\n    spnPrivatePartSize.innerHTML = '0';\n    spnPrivatePartSizeConfirmation.innerHTML = '0';\n\n    txtPrivatePart.disabled = true;\n    txtPrivatePartConfirmation.disabled = true;\n\n    btnProtect.innerHTML = 'Clear and unlock';\n    btnProtect.title = btnProtectTitleForClear;\n\n    updatePrivatePartsMatching();\n}\n\nfunction clearAndUnLockPrivatePart(): void {\n    privatePart = undefined;\n    spnProtectedConfirmation.innerHTML = '';\n\n    txtPrivatePart.disabled = false;\n    txtPrivatePartConfirmation.disabled = false;\n\n    btnProtect.innerHTML = 'Protect and lock';\n    btnProtect.title = btnProtectTitleForProtect;\n    btnProtect.disabled = true;\n}\n\nfunction togglePrivatePartProtection(): void {\n    if (privatePart === undefined) {\n        protectAndLockPrivatePart();\n    } else {\n        clearAndUnLockPrivatePart();\n    }\n}\n\nfunction onProtectButtonClick() {\n    togglePrivatePartProtection();\n}\n\nconst protectPrivatePartAction: TimedAction = new TimedAction(protectAndLockPrivatePart, PRIVATE_PART_PROTECTION_TIMEOUT);\n\nfunction onPrivatePartTextInput(): void {\n    btnProtect.disabled = txtPrivatePart.value.length === 0;\n\n    spnPrivatePartSize.innerHTML = txtPrivatePart.value.length.toString();\n    updatePrivatePartsMatching();\n\n    let onChangedHandler: () => void;\n    for (onChangedHandler of onChangedHandlers) {\n        onChangedHandler();\n    }\n\n    protectPrivatePartAction.reset();\n}\n\nfunction updatePrivatePartsMatching(): void {\n    if (txtPrivatePartConfirmation.value === txtPrivatePart.value) {\n        txtPrivatePartConfirmation.style.setProperty('background', SUCCESS_COLOR);\n    } else {\n        txtPrivatePartConfirmation.style.setProperty('background', ERROR_COLOR);\n    }\n};\n\nfunction onPrivatePartConfirmationTextInput(): void {\n    spnPrivatePartSizeConfirmation.innerHTML = txtPrivatePartConfirmation.value.length.toString();\n    protectPrivatePartAction.reset();\n    updatePrivatePartsMatching();\n}\n\nexport class PrivatePartComponent implements IComponent {\n    init(): void {\n        btnProtect.addEventListener('click', onProtectButtonClick);\n        txtPrivatePart.addEventListener('input', onPrivatePartTextInput);\n        txtPrivatePartConfirmation.addEventListener('input', onPrivatePartConfirmationTextInput);\n\n        updatePrivatePartsMatching();\n        btnProtect.title = btnProtectTitleForProtect;\n    }\n}\n","import { ICipher } from '../crypto';\nimport * as stringUtils from '../stringUtils';\nimport * as arrayUtils from '../arrayUtils';\nimport { ITabInfo } from '../TabControl';\nimport { getElementById, setupCopyButton, ERROR_COLOR } from '../ui';\nimport { getPrivatePart } from './privatePartComponent';\n\nimport { CipherV1 } from '../ciphers/v1';\nimport { CipherV2 } from '../ciphers/v2';\nimport { IComponent } from './IComponent';\n\nimport * as storageOutputComponent from './storageOutputComponent';\n\nconst ciphers: ICipher[] = [\n    new CipherV1(),\n    new CipherV2()\n];\n\nconst btnTabReEncrypt: HTMLInputElement = getElementById('btnTabReEncrypt');\nconst divTabReEncrypt: HTMLInputElement = getElementById('divTabReEncrypt');\n\nconst txtReEncryptSource: HTMLInputElement = getElementById('txtReEncryptSource');\nconst txtReEncryptTarget: HTMLInputElement = getElementById('txtReEncryptTarget');\n\nconst cboReEncryptFrom: HTMLInputElement = getElementById('cboReEncryptFrom');\nconst cboReEncryptTo: HTMLInputElement = getElementById('cboReEncryptTo');\nconst btnReEncrypt: HTMLInputElement = getElementById('btnReEncrypt');\n\nconst btnClearReEncryptSource: HTMLInputElement = getElementById('btnClearReEncryptSource');\nconst spnCopyReEncryptTargetFeedback: HTMLInputElement = getElementById('spnCopyReEncryptTargetFeedback');\nconst btnCopyReEncryptTarget: HTMLInputElement = getElementById('btnCopyReEncryptTarget');\nconst btnClearReEncryptTarget: HTMLInputElement = getElementById('btnClearReEncryptTarget');\n\nfunction fillCipherComboBox(cbo: HTMLSelectElement, initialValue: number): void {\n    let cipher: ICipher;\n\n    for (cipher of ciphers) {\n        const item: HTMLOptionElement = document.createElement('option');\n        item.value = cbo.childNodes.length.toString();\n        item.text = `${cipher.description} (v${cipher.version})`;\n        cbo.add(item);\n    }\n\n    cbo.value = initialValue.toString();\n}\n\nfunction clearSourceVisualCue(): void {\n    txtReEncryptSource.style.removeProperty('background-color');\n}\n\nfunction clearTargetVisualCue(): void {\n    txtReEncryptTarget.style.removeProperty('background-color');\n}\n\nfunction setSourceVisualCueError() {\n    txtReEncryptSource.style.setProperty('background-color', ERROR_COLOR);\n}\n\nfunction setTargetVisualCueError() {\n    txtReEncryptTarget.style.setProperty('background-color', ERROR_COLOR);\n}\n\nfunction clearAllVisualCues(): void {\n    clearSourceVisualCue();\n    clearTargetVisualCue();\n}\n\nasync function onReEncryptButtonClick(): Promise<void> {\n    txtReEncryptTarget.value = '';\n    clearAllVisualCues();\n\n    if (txtReEncryptSource.value.length === 0) {\n        setSourceVisualCueError();\n        return;\n    }\n\n    if (cboReEncryptFrom.value === cboReEncryptTo.value) {\n        setTargetVisualCueError();\n        return;\n    }\n\n    const privatePart: string = getPrivatePart();\n    if (privatePart.length === 0) {\n        console.warn('Private part is empty');\n        return;\n    }\n\n    const sourceCipherIndex = parseInt(cboReEncryptFrom.value, 10);\n    const targetCipherIndex = parseInt(cboReEncryptTo.value, 10);\n\n    const password: ArrayBuffer = stringUtils.stringToArray(privatePart);\n\n    const input: ArrayBuffer = stringUtils.fromBase16(txtReEncryptSource.value);\n    const decrypted: ArrayBuffer = await ciphers[sourceCipherIndex].decrypt(input, password);\n    const reEncrypted: ArrayBuffer = await ciphers[targetCipherIndex].encrypt(decrypted, password);\n\n    txtReEncryptTarget.value = arrayUtils.toBase16(reEncrypted);\n}\n\nexport class ReEncryptComponent implements IComponent, ITabInfo {\n    getTabButton(): HTMLInputElement {\n        return btnTabReEncrypt;\n    }\n    getTabContent(): HTMLInputElement {\n        return divTabReEncrypt;\n    }\n    onTabSelected() {\n        storageOutputComponent.hide();\n    }\n\n    init(): void {\n        setupCopyButton(txtReEncryptTarget, btnCopyReEncryptTarget, spnCopyReEncryptTargetFeedback);\n\n        // Mais est-ce que ce monde est serieux?\n        fillCipherComboBox(<HTMLSelectElement><any>cboReEncryptFrom, ciphers.length - 2);\n        fillCipherComboBox(<HTMLSelectElement><any>cboReEncryptTo, ciphers.length - 1);\n\n        txtReEncryptSource.addEventListener('input', () => {\n            if (txtReEncryptSource.value.length > 0) {\n                clearSourceVisualCue();\n            }\n        });\n\n        btnClearReEncryptSource.addEventListener('click', () => {\n            txtReEncryptSource.value = '';\n        });\n\n        btnClearReEncryptTarget.addEventListener('click', () => {\n            txtReEncryptTarget.value = '';\n        });\n\n        btnReEncrypt.addEventListener('click', onReEncryptButtonClick);\n    }\n}\n","import { getElementById, ERROR_COLOR } from '../ui';\nimport { PlainObject } from '../PlainObject';\nimport { IComponent } from './IComponent';\n\nconst divStorageOutput: HTMLInputElement = getElementById('divStorageOutput');\n\nconst txtPath: HTMLInputElement = getElementById('txtPath');\n\nconst txtParameters: HTMLInputElement = getElementById('txtParameters');\nconst txtCustomKeys: HTMLInputElement = getElementById('txtCustomKeys');\n\nfunction shallowMerge(source: PlainObject | null, target: PlainObject | null, reservedKeys: string[]): PlainObject {\n    const result: PlainObject = {};\n\n    if (source !== null) {\n        for (const [key, value] of Object.entries(source)) {\n            if (reservedKeys.includes(key) === false) {\n                result[key] = value;\n            }\n        }\n    }\n\n    if (target !== null) {\n        for (const [key, value] of Object.entries(target)) {\n            result[key] = value;\n        }\n    }\n\n    return result;\n}\n\ntype IChainInfo = {\n    head: PlainObject,\n    tailParent: PlainObject,\n    tail: PlainObject\n};\n\n// Transforms a path like \"a/b/c/d\" into a hierarchy of objects like { \"a\": { \"b\": { \"c\": { \"d\": {} } } } }\n// From the result object, head is the root object that contains \"a\", tail is the value of \"d\", and tailParent is the value of \"c\"\nfunction pathToObjectChain(path: string, chainInfo: IChainInfo | undefined = undefined): IChainInfo {\n    const separatorIndex: number = path.indexOf('/');\n\n    const tail: PlainObject = {};\n\n    const firstPath: string = separatorIndex >= 0 ? path.substr(0, separatorIndex) : path;\n    const remainingPath: string | undefined = separatorIndex >= 0 ? path.substr(separatorIndex + 1) : undefined;\n\n    if (chainInfo === undefined) {\n        const node: PlainObject = {};\n        node[firstPath] = tail;\n        chainInfo = {\n            head: node,\n            tailParent: node,\n            tail\n        };\n    } else {\n        chainInfo.tail[firstPath] = tail;\n        chainInfo.tailParent = chainInfo.tail;\n        chainInfo.tail = tail;\n    }\n\n    if (remainingPath) {\n        return pathToObjectChain(remainingPath, chainInfo);\n    }\n\n    return chainInfo;\n}\n\nfunction onPathTextInput() {\n    update();\n}\n\nfunction onCustomKeysTextInput(): void {\n    update();\n}\n\nfunction updateCustomKeysDisplay(isValid: boolean): void {\n    if (isValid) {\n        txtCustomKeys.style.removeProperty('background');\n        return;\n    }\n\n    txtCustomKeys.style.setProperty('background', ERROR_COLOR);\n}\n\nfunction parseCustomKeys(): PlainObject | null {\n    if (txtCustomKeys.value === '') {\n        return {};\n    }\n\n    try {\n        const obj: any = JSON.parse(txtCustomKeys.value);\n        if (obj === null || obj.constructor.name !== 'Object') {\n            return null;\n        }\n        return obj as PlainObject;\n    } catch {\n        return null;\n    }\n}\n\nfunction update(): void {\n    if (_parameterKeys === undefined || _parameterPath === undefined || _reservedKeys === undefined) {\n        return;\n    }\n\n    const chainInfo: IChainInfo = pathToObjectChain(`${txtPath.value}/${_parameterPath}`);\n    const leaf: PlainObject = chainInfo.tail;\n\n    for (const [key, value] of Object.entries(_parameterKeys)) {\n        leaf[key] = value;\n    }\n\n    const customKeys: PlainObject | null = parseCustomKeys();\n    updateCustomKeysDisplay(customKeys !== null);\n    const resultParameters: PlainObject = shallowMerge(customKeys, leaf, _reservedKeys);\n\n    if (Object.keys(resultParameters).length === 0) {\n        // Set the value of the first (single) property of the object to null.\n        chainInfo.tailParent[Object.keys(chainInfo.tailParent)[0]] = null;\n    } else {\n        chainInfo.tailParent[Object.keys(chainInfo.tailParent)[0]] = resultParameters;\n    }\n\n    txtParameters.value = JSON.stringify(chainInfo.head, undefined, 4);\n}\n\nexport function clearOutputs(): void {\n    _parameterKeys = undefined;\n    _parameterPath = undefined;\n    _reservedKeys = undefined;\n    txtParameters.value = '';\n}\n\nlet _parameterKeys: PlainObject | undefined;\nlet _parameterPath: string | undefined;\nlet _reservedKeys: string[] | undefined;\n\nexport function setParameters(parameterKeys: PlainObject, parameterPath: string, reservedKeys: string[]) {\n    _parameterKeys = parameterKeys;\n    _parameterPath = parameterPath;\n    _reservedKeys = reservedKeys;\n    update();\n}\n\nexport function show(): void {\n    divStorageOutput.style.setProperty('display', 'initial');\n}\n\nexport function hide(): void {\n    divStorageOutput.style.setProperty('display', 'none');\n}\n\nexport class StorageOutputComponent implements IComponent {\n    init(): void {\n        txtCustomKeys.addEventListener('input', onCustomKeysTextInput);\n        txtPath.addEventListener('input', onPathTextInput);\n    }\n}\n","import * as arrayUtils from './arrayUtils';\n\nexport const BASE62_ALPHABET: string = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n\nexport interface IPasswordGenerator {\n    readonly version: number;\n    readonly description: string;\n    generatePassword(privatePart: ArrayBuffer, publicPart: ArrayBuffer): Promise<ArrayBuffer>;\n}\n\nexport interface ICipher {\n    readonly version: number;\n    readonly description: string;\n    encrypt(input: ArrayBuffer, password: ArrayBuffer): Promise<ArrayBuffer>;\n    decrypt(input: ArrayBuffer, password: ArrayBuffer): Promise<ArrayBuffer>;\n}\n\nexport async function getDerivedBytes(password: ArrayBuffer, salt: ArrayBuffer): Promise<ArrayBuffer> {\n    const baseKey: CryptoKey = await crypto.subtle.importKey(\n        'raw',\n        password,\n        'PBKDF2',\n        false,\n        ['deriveKey']\n    );\n\n    const algorithm: Pbkdf2Params = {\n        name: 'PBKDF2',\n        hash: 'SHA-512',\n        iterations: 100000,\n        salt\n    };\n\n    const derivedKeyType: AesDerivedKeyParams = {\n        name: 'AES-CBC',\n        length: 256\n    };\n\n    const result: CryptoKey = await crypto.subtle.deriveKey(\n        algorithm,\n        baseKey,\n        derivedKeyType,\n        true,\n        ['encrypt']\n    );\n\n    const key: ArrayBuffer = await crypto.subtle.exportKey('raw', result);\n\n    return key;\n}\n\nexport function generateRandomBytes(byteCount: number = 64): ArrayBuffer {\n    const array: Uint8Array = new Uint8Array(byteCount);\n    return crypto.getRandomValues(array).buffer;\n}\n\nexport function generateRandomString(byteCount: number = 64, alphabet: string = BASE62_ALPHABET): string {\n    const array: ArrayBuffer = generateRandomBytes(byteCount);\n    return arrayUtils.toCustomBaseOneWay(array, alphabet);\n}\n","import { getElementById } from './ui';\nimport { TabControl, ITabInfo } from './TabControl';\nimport { IComponent } from './components/IComponent';\n\nimport { PrivatePartComponent } from './components/privatePartComponent';\nimport { PasswordComponent } from './components/passwordComponent';\nimport { CipherComponent } from './components/cipherComponent';\nimport { ReEncryptComponent } from './components/reEncryptComponent';\n\nimport * as storageOutputComponent from './components/storageOutputComponent';\n\nconst nothingTabInfo: ITabInfo = {\n    getTabButton(): HTMLInputElement {\n        return getElementById('btnTabNothing');\n    },\n    getTabContent(): HTMLInputElement {\n        return getElementById('divTabNothing');\n    },\n    onTabSelected(): void {\n        storageOutputComponent.hide();\n    }\n}\n\nconst elements: any[] = [\n    nothingTabInfo,\n    new PrivatePartComponent(),\n    new PasswordComponent(),\n    new CipherComponent(),\n    new ReEncryptComponent(),\n    new storageOutputComponent.StorageOutputComponent(),\n];\n\nconst tabs: ITabInfo[] = elements.filter(e => (e as ITabInfo).getTabButton !== undefined);\nconst components: IComponent[] = elements.filter(e => (e as IComponent).init !== undefined);\n\nnew TabControl(tabs);\n\ndeclare const COMMITHASH: string;\n\nconst version = COMMITHASH.substr(0, 11);\nconst githubLink = '<a href=\"https://github.com/TanukiSharp/ItchyPassword\" target=\"_blank\">github</a>';\n\ngetElementById('divInfo').innerHTML = `${version}<br/>${githubLink}`;\n\nlet component: IComponent;\nfor (component of components) {\n    component.init();\n}\n","import { stringToArray } from '../stringUtils';\nimport { IPasswordGenerator, getDerivedBytes } from '../crypto';\n\nexport class PasswordGeneratorV1 implements IPasswordGenerator {\n    private hkdfPurpose: ArrayBuffer;\n    private _description: string;\n\n    public constructor(hkdfPurpose: string) {\n        this.hkdfPurpose = stringToArray(hkdfPurpose);\n        this._description = `HKDF(PBKDF2, HMAC512) [purpose: ${hkdfPurpose}]`;\n    }\n\n    public get version(): number {\n        return 1;\n    }\n\n    public get description(): string {\n        return this._description;\n    }\n\n    public async generatePassword(privatePart: ArrayBuffer, publicPart: ArrayBuffer): Promise<ArrayBuffer> {\n        const derivedKey: ArrayBuffer = await getDerivedBytes(privatePart, publicPart);\n\n        const hmacParameters: HmacImportParams = {\n            name: 'HMAC',\n            hash: { name: 'SHA-512' }\n        };\n\n        const hkdfKey: CryptoKey = await crypto.subtle.importKey(\n            'raw',\n            derivedKey,\n            hmacParameters,\n            false,\n            ['sign']\n        );\n\n        return await crypto.subtle.sign('HMAC', hkdfKey, this.hkdfPurpose);\n    }\n}\n","export function truncate(input: string, length: number): string {\n    if (input.length <= length) {\n        return input;\n    }\n\n    return input.substr(0, length);\n}\n\nexport function stringToArray(str: string): ArrayBuffer {\n    const encoder = new TextEncoder(/*'utf-8'*/);\n    return encoder.encode(str).buffer;\n}\n\nexport function fromBase16(str: string): ArrayBuffer {\n    if (str.length % 2 !== 0) {\n        str = '0' + str;\n    }\n\n    const result: Uint8Array = new Uint8Array(str.length / 2);\n\n    for (let i = 0; i < result.byteLength; i += 1) {\n        result[i] = parseInt(str.substr(i * 2, 2), 16);\n    }\n\n    return result.buffer;\n}\n","import { VisualFeedback } from './VisualFeedback';\n\nexport function getElementById(elementName: string): HTMLInputElement {\n    const element: HTMLElement|null = document.getElementById(elementName);\n\n    if (elementName === null) {\n        throw new Error(`DOM element '${elementName}' not found.`);\n    }\n\n    return element as HTMLInputElement;\n}\n\nasync function writeToClipboard(text: string): Promise<boolean> {\n    try {\n        await navigator.clipboard.writeText(text);\n        return true;\n    } catch (error) {\n        console.error(error.stack || error);\n        return false;\n    }\n}\n\nexport function setupCopyButton(txt: HTMLInputElement, button: HTMLInputElement, feedback: HTMLInputElement): void {\n    const visualFeedback: VisualFeedback = new VisualFeedback(feedback);\n    button.addEventListener('click', async () => {\n        if (await writeToClipboard(txt.value)) {\n            visualFeedback.setText('Copied', 3000);\n        } else {\n            visualFeedback.setText('<span style=\"color: red\">Failed to copy</span>', 3000);\n        }\n    });\n}\n\nexport const SUCCESS_COLOR: string = '#D0FFD0';\nexport const ERROR_COLOR: string = '#FFD0D0';\n"],"sourceRoot":""}